<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>[enzo]lutions</title>
        <link>http://enzolutions.com</link>
        <description>RSS feed for [enzo]lutions</description>
                <atom:link href="http://enzolutions.com/rss.xml" rel="self" type="application/rss+xml" />
                    <item>
                <title>Backdrop CMS First impressions</title>
                <description><![CDATA[<p>Today I finally decided to install <a href="https://backdropcms.org/" target="_blank">Backdrop CMS</a> which is in version 1.0 preview and in Jan 15th, 2015.  will see his first official release.</p>

<p>Here I will not compare if is better or not than Drupal 7, I will just report the changes I saw and how complex I found the process to migrate a module from Drupal 7 to <strong>Backdrop</strong></p>

<h1>Installation</h1>

<p>Looks the same as Drupal 8, check the following image and let me know if you aren't agree</p>

<p><img src="http://enzolutions.com/assets/img/installing_backdrop_cms.png"/></p>

<h1>File Structure</h1>

<p>The files structure of Backdrop is so similar to Drupal 8 check in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_file_structure.png"/></p>

<h1>Modules UI</h1>

<p>The modules menu is named now Functionality and as you see in the following image the core implement a feature implemented by <a href="https://www.drupal.org/project/module_filter" target="_blank"></a>module module_filter in Drupal 7.</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_admin_ui.png"/></p>

<h1>Layouts</h1>

<p>In <strong>example.com/admin/structure/layouts</strong> you can find a new concept <strong>Layouts</strong>, Layouts is an implementation similar to <a href="https://www.drupal.org/project/panels" target="_blank">Panels</a> Layouts. By default there is two Layout Admin and Default</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_layout_ui.png"/></p>

<p>You can create your own Layouts and apply this layouts using a matching by URL and you can add contidions, as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_new_layout.png"/></p>

<p>Backdrop doesn't have a menu to get the list of block generated via code, this list of block is only available when edit a Layout and add a block as you can see in the following imagen.</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_layout_add_block.png"/></p>

<h1>Module Migration</h1>

<p>Well maybe this is the part every buddy was expecting, OK to test I decide to check the most used module from <a href="https://www.drupal.org/project/usage" target="_blank">Usage</a> project.</p>

<p>I decide to test with <a href="https://www.drupal.org/project/token" target="_blank">Token</a> the #4 most used module in Drupal with 746,542 installations reported until Nov 15, 2014.</p>

<p>I skip ctools because off Ctools is too complex and views is already in <strong>Backdrop</strong> core :P</p>

<h2>Enable module in Backdrop</h2>

<p>The structure of Modules in Backdrop is the same as Drupal 7, but we need to apply couple changes to avoid Backdrop reporte the module as invalid as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/backdrop_module_valid_invalid.png"/></p>

<p>The only require one change in file <strong>token.info</strong> replacing core to <strong>backdrop</strong>. Check how must looks the file to be process by Backdrop</p>

<pre><code>name = Token
description = Provides a user interface for the Token API and some missing core tokens.
core = 7.x
files[] = token.test

version = "7.x-1.5"
project = "token"
backdrop = 1.x
</code></pre>

<p>After that the installation process works like a charm, due the hooks hook_requirements, hook_schema and hook_update_xx are supported.</p>

<h2>Changes detected</h2>

<p>As you can imagine there are some things must be change, in order to use the new Backdrop functions.</p>

<p>Caveats I just replace the code reported as PHP Fatal error.</p>

<h3>Replace function system_get_date_types</h3>

<p>The function <a href="https://api.drupal.org/api/drupal/modules!system!system.module/function/system_get_date_types/7" target="_blank">system_get_date_types</a> doesn't exist in Backdrop, but after some review in source code of core I detect this function was replaced by <a href="https://api.backdropcms.org/api/backdrop/core%21modules%21system%21system.module/function/system_get_date_formats/1" target="_blank">system_get_date_formats</a>.</p>

<p>Also in Drupal 7 this function return a multidimensional array, and each array entry has a title index, in backdrop this index was replaced by <strong>label</strong></p>

<h3>Replace cache_get and cache_set</h3>

<p>These functions were replaced by function <strong>cache</strong> this function receive a bin name and return a Cache class with methods set and get.</p>

<p>The default cache class in Backdrop is <a href="https://api.backdropcms.org/api/backdrop/core%21includes%21cache.inc/class/BackdropDatabaseCache/1" target="_blank">BackdropDatabaseCache</a></p>

<p>Let me show how a get change from Drupal 7</p>

<pre><code>Drupal 7: cache_get('field:info', 'cache_token');

Backdrop: cache('token')-&gt;get('field:info');
</code></pre>

<p>Now how a set change from Drupal 7 to Backdrop</p>

<pre><code>Drupal 7: cache_set('field:info', $info, 'cache_token');

Backdrop: cache('token')-&gt;set('field:info', $info);
</code></pre>

<h2>Testing</h2>

<p>After apply this changes in module token I need to test, I decide to create an script and try to execute with Drush, but I got the following error</p>

<pre><code>Fatal error: Call to undefined function node_load() in /Users/enzo/www/backdrop/token_test.php on line 8
</code></pre>

<p>That is because Drush doesn't know how to load the Backdrop bootstrap, so I decide to create a script with the bootstrap included as you can see in the following snippet.</p>

<pre><code>&lt;?php

define('BACKDROP_ROOT', getcwd());

require_once BACKDROP_ROOT . '/core/includes/bootstrap.inc';
backdrop_bootstrap(BACKDROP_BOOTSTRAP_FULL);

$node = node_load(1);

$nid = token_replace('[node:nid]', array('node' =&gt; $node));

print 'Node ID: ' . $nid . "\n";
</code></pre>

<p>The previous script generate the following output.</p>

<pre><code>Node ID: 1
</code></pre>

<p>Testing at least this simple transformation is working, I am not saying the migration process of a module to Backdrop is a piece of cake, but until know looks like is not a titanic project for sure any case is different.</p>

<p>You can check more details about migrate module to Backdrop in video <a target="_blank" href="https://www.youtube.com/watch?v=by8mMhIpARA">Porting a Module to Backdrop - Basics</a>.</p>

<p>If you want to test my version of Token to Backdrop check the project <a href="https://github.com/enzolutions/backdrop_token" target="_blank">Backdrop Token</a></p>

<p>I hope you found this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/29/backdrop-cms-first-impressions/</link>
                <pubDate>Mon, 29 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/29/backdrop-cms-first-impressions/</guid>
            </item>
                    <item>
                <title>How to create an Authentication Provider in Drupal 8</title>
                <description><![CDATA[<p>Some weeks ago I show you <a href="http://enzolutions.com/articles/2014/12/16/how-to-create-a-rest-resource-in-drupal-8" target="_blank">How to create a Rest Resource in Drupal 8</a> and as I explain in that post we use the Authentication Provider <strong>Basic Auth</strong> as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/restui_bundle_entities_settings.png"/></p>

<p>Right now is the unique Authentication Provider available to use in a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS" target="_blank">CORS</a> scenery. If you want to read more about CORS you can read the blog entry <a href="http://enzolutions.com2014/05/31/what-is-cross-origin-resource-sharing-cors" target="_blank">What is Cross-Origin Resource Sharing (CORS)</a>.</p>

<p>But what about if <strong>Basic Auth</strong> doesn't fit with you needs, well I will show you how to create a custom Authentication Provider.</p>

<h1>The Requirement</h1>

<p>My imaginary request will be an Authentication Provider without user validation, that means access as <strong>Anonymous</strong> user but we require to validate the source of request to check against an <strong>IP White List</strong> enabled to access our REST resources.</p>

<h1>Create a Module</h1>

<p>I will skip the explanation about how to create the Module <strong>ip_consumer_auth</strong> in Drupal 8 because could be generated using the project <a href="http://drupalconsole.com/" target="_blank">Drupal Console</a> executing the following command.</p>

<pre><code>$ drupal generate:module
</code></pre>

<p>After create the module with the console, we will use again to create a Form Configuration to create our <strong>IP White List</strong> using the following command.</p>

<pre><code>$ drupal generate:form:config
</code></pre>

<p>Add a textarea field to form to store allowed IP Address. The implementation of method buildForm will looks similar to following snippet.</p>

<pre><code>/**
 * {@inheritdoc}
 */
public function buildForm(array $form, FormStateInterface $form_state) {
  $config = $this-&gt;config('ip_consumer_auth.consumers_form_config');
  $form['allowed_ip_consumers'] = [
    '#type' =&gt; 'textarea',
    '#title' =&gt; $this-&gt;t('Allowed IP Consumers'),
    '#description' =&gt; $this-&gt;t('Place IP addresses on separate lines'),
    '#default_value' =&gt; $config-&gt;get('allowed_ip_consumers'),
  ];
  return parent::buildForm($form, $form_state);
}
</code></pre>

<p>The form class will be located at <strong>ip_consumer_auth/src/Form/ConsumersForm.php</strong></p>

<p>The layout to enter allowed IP consumer will looks similar to this image</p>

<p><img src="http://enzolutions.com/assets/img/allowed_ip_resources.png"/></p>

<p>The code to save that values are generated by <strong>Drupal Console</strong>, in the same way the Routing is created, be sure you change the values to your convenience after generate the form.</p>

<h1>Create Authentication Provider</h1>

<p>Before to start with code for our Authetication Provider we need to inform to <strong>Drupal 8</strong> the existence of our custom Authentication Provider, to do that we add a new file in our module named <strong>ip_consumer_auth.service.yml</strong> because my module name is <strong>ip_consumer_auth</strong>.</p>

<p>Let me show you the content of that file</p>

<pre><code>services:
  authentication.ip_consumer_auth:
    class: Drupal\ip_consumer_auth\Authentication\Provider\IPConsumerAuth
    arguments: ['@config.factory', '@entity.manager']
    tags:
      - { name: authentication_provider, priority: 100 }
</code></pre>

<p>The discover for services will find this file and registering our Authentication Provider Class <strong>Drupal\ip_consumer_auth\Authentication\Provider\IPConsumerAuth</strong> and prepare the elements to send to constructor.</p>

<p>With the sentence above we don't have to implement the method <strong>create</strong> in our class, using <a href="http://en.wikipedia.org/wiki/Dependency_injection" target="_blank">Dependency Injection</a>.</p>

<p>At the end we define the priority, this value will define the execution order if multiple Authentication Provider were enabled.</p>

<h2>Implement Class Authentication Provider IPConsumerAuth</h2>

<p>Our class <strong>IPConsumerAuth</strong> must implement the interface <a href="https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Authentication!AuthenticationProviderInterface.php/interface/AuthenticationProviderInterface/8" target="_blank">AuthenticationProviderInterface</a> as you can see in the following snippet.</p>

<pre><code>/**
 * HTTP Basic authentication provider.
 */
class IPConsumerAuth implements AuthenticationProviderInterface {
}
</code></pre>

<h2>Libraries</h2>

<p>The Authentication Provider require some libraries and we must to inform to AutoLoader where are these libraries, let me show the complete list.</p>

<pre><code>namespace Drupal\ip_consumer_auth\Authentication\Provider;

use \Drupal\Component\Utility\String;
use Drupal\Core\Authentication\AuthenticationProviderInterface;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Entity\EntityManagerInterface;
use Drupal\Core\Flood\FloodInterface;
use Drupal\user\UserAuthInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
</code></pre>

<h2>Implement method applies</h2>

<p>Even if the Authentication Provider is enabled for some REST resource is required a validation to confirm the Authentication Provider apply for current Request.</p>

<p>In our case if our Authentication Provider was enabled we will add any extra validation as you can see in the following implementation.</p>

<pre><code>/**
 * {@inheritdoc}
 */
public function applies(Request $request) {
  // If Authentication Provider is enabled always apply
  return TRUE;
}
</code></pre>

<h2>Implement method authenticate</h2>

<p>Now we have to implement the logic to execute to validate the Request, check the following snippet.</p>

<pre><code>/**
 * {@inheritdoc}
 */
public function authenticate(Request $request) {
  $allowed_ip_consumers = $this-&gt;configFactory-&gt;get('ip_consumer_auth.consumers_form_config')-&gt;get('allowed_ip_consumers');
  $ips = explode( "\n", $allowed_ip_consumers );
  $consumer_ip = $request-&gt;getClientIp(TRUE);
  if (in_array($consumer_ip, $ips)) {
    // Return Anonymous user
    return $this-&gt;entityManager-&gt;getStorage('user')-&gt;load(0);
  }
  else{
    throw new AccessDeniedHttpException();
    return null;
  }
}
</code></pre>

<p>In the implementation above I use the <strong>configFactory</strong> to get the information stored about allowed IP Consumer using the Settings form created before.</p>

<p>The authenticate method receive an <a href="http://api.symfony.com/2.0/Symfony/Component/HttpFoundation/Request.html" target="_blank">Request</a> object defined in <a href="http://symfony.com/doc/current/components/http_foundation/introduction.html"></a>The HttpFoundation Component</a> of <a href="http://symfony.com/" target="_blank">Symfony</a>.</p>

<p>Using the Request method <a href="http://api.symfony.com/2.0/Symfony/Component/HttpFoundation/Request.html#method_getClientIp" target="_blank">getClientIp</a> we get the IP of Consumer.</p>

<p>I used the PHP functions <a href="http://php.net/manual/es/function.explode.php" target="_blank">explode</a> and <a href="http://php.net/manual/en/function.in-array.php" target="_blank">in_array</a> to determine if IP consumer belong to Allowed IP consumer. I know maybe with a regex will be more efficient but I really sucks in Regex.</p>

<p>If validation pass I return an Account object for Anonymous user, if fail an Access Denied Exception is throw.</p>

<h2>Implement method handleException</h2>

<p>Before if the IP wasn't in the allowed list of IP Consumer an exception is throw, using the method <strong>handleException</strong> we have the option to intercept and process to produce any output desired.</p>

<p>Let me share with you my implementation</p>

<pre><code>  /**
   * {@inheritdoc}
   */
  public function cleanup(Request $request) {}

  /**
   * {@inheritdoc}
   */
  public function handleException(GetResponseForExceptionEvent $event) {
    $exception = $event-&gt;getException();
    if ($exception instanceof AccessDeniedHttpException) {
      $event-&gt;setException(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
      return TRUE;
    }
    return FALSE;
  }
</code></pre>

<p>As you can see is not to complex, but is just an idea above what you can do with this method.</p>

<h1>Usage</h1>

<p>After create our module with our custom Authentication Provider and enable we are ready to start to use.</p>

<p>Lets imagine you install the module <a href="https://github.com/enzolutions/entity_rest_extra" target="_blank">Entity Rest Extra</a> and we will use our Authentication Provider.</p>

<p>Using the <a href="https://www.drupal.org/project/restui/git-instructions" target="_blank">Rest UI</a>(I recommend to use the git version until Drupal 8 get a first release) module we enable the REST Resource and enable our Custom Authentication Provider, as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/custom_authentication_provider.png"/></p>

<h2>Access Denied</h2>

<p>Now if you try to access via CORS the REST end point <strong>http://example.com/bundles/node</strong> you will get an error <strong>403 Forbidden</strong> because the allowed IP consumers weren't defined yet.</p>

<h2>Unauthorized</h2>

<p>After enable your IP consumer and try again <strong>http://example.com/bundles/node</strong> you will get an error <strong>401 Unauthorized</strong></p>

<p>If that error doesn't have any logic for you let me explain, remember in our Authentication Provider we don't have information about any users, so if the request pass the validation of IP Consumer we return an Anonymous user.</p>

<p>When we enable any REST Resource in Drupal 8 a new set of  permissions is created, in our case we have to assign the permission <strong>Access GET on Bundles by entities resource</strong> to Anonymous user as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/rest_anonymous_permission.png"/></p>

<h2>Access Denied AGAIN</h2>

<p>Well maybe at this point you get MAD with me, because now you get again an error
 <strong>403 Forbidden</strong>, but at this time the fault is not caused by Authentication Provider.</p>

<p>The error now is related with REST Resource itself is you check the code of module <strong>Entity Rest Extra</strong> you will found the permission <strong>Administer content types</strong> is required to access this Resource.</p>

<h2>Bonus</h2>

<p>Well you can complain about nobody inform to you that module has own permissions validation or the REST permissions, well that could be true.</p>

<p>If you want to get more information about a specific Drupal router you can use the <strong>Drupal Console</strong>.</p>

<p>First thing you have to do is determine the Router id, we can you the canonical URL as you can see in the following command.</p>

<pre>
 $ console router:debug | grep bundles/{entity}
 rest.entity_bundles.GET.json                             /bundles/{entity}
 </pre>

<p>Now we can get more information about router using the following command.</p>

<pre>
 $ console router:debug rest.entity_bundles.GET.json
 Route name                   Options
 rest.entity_bundles.GET.json
  + Pattern                   /bundles/{entity}
  + Defaults
   - _controller              Drupal\rest\RequestHandler::handle
   - _plugin                  entity_bundles
  + Options
   - compiler_class           \Drupal\Core\Routing\RouteCompiler
   - _access_mode             ANY
   - 0                        ip_consumer_auth
   - 0                        access_check.permission
  </pre>

<p>As you can see the last think executed is access_check.permission generating the error 401. Maybe in the future the internal permissions in resourced will be included.</p>

<p>If you want see a complete implementation of Authentication provider you clone the project <a href="https://github.com/enzolutions/ip_consumer_auth" target="_blank">IP Consumer Auth</a></p>

<p>I hope you found this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/28/how-to-create-an-authentication-provider-in-drupal-8/</link>
                <pubDate>Sun, 28 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/28/how-to-create-an-authentication-provider-in-drupal-8/</guid>
            </item>
                    <item>
                <title>How to use Drupal 8 state in Cron to resume a process.</title>
                <description><![CDATA[<p>Usually Cron could be used to execute tasks who require a lot of processing, is normal to execute this tasks over a list of items.</p>

<p>The problem with this requirements is maybe there is not enough with one cron time execution to process the whole elements in our list of items to process. So we have to save the status of our execution to continue the next time the cron is executed.</p>

<p>We can do that with <a href="https://api.drupal.org/api/drupal/core%21modules%21system%21core.api.php/group/queue/8" target="_blank">Queue Operations</a>, but this solution is complex to implement(maybe just for me) so I will propose a simple option to implement the resume feature.</p>

<h1>Working with our list of items to process.</h1>

<p>Lets imagine we store our list of items in and array, and the normal option to process and array is using a <a href="http://php.net/manual/en/control-structures.foreach.php" target="_blank">foreach</a>.</p>

<p>Well we can't use a foreach in our resume because this function starts his execution with a reset of the internal array pointer to the first element of the array and that is not good for our resume process.</p>

<p>So I have to use a different solution to do that, let me show you my first implementation</p>

<pre><code>foreach ( $array as $array_key =&gt; $array_value ) {
}
</code></pre>

<p>Instead of that I decide to use a simple while with some changes to simulate the array key assignation in a variable as you can see in the following snippet.</p>

<pre><code>while (list($array_key, $array_value) = each($array)) {
}
</code></pre>

<h1>Store last state</h1>

<p>With the problem about array pointer resolved we need store the last correct pointer processed by cron, to store that I use a new feature of Drupal 8 <a href="https://api.drupal.org/api/drupal/core!lib!Drupal.php/function/Drupal%3A%3Astate/8" target="_blank">Drupal::state()</a>.</p>

<p>Drupal:state store temporary and not critical information, this information is not be migrated between environments in a eventual migration to production.</p>

<p>Let me show you how to use in combination with while loops</p>

<pre><code>while (list($array_key, $array_value) = each($array)) {

  // --- INSERT LONG OPERATIONS HERE --

  // Set last bank process to continue after this bank
  \Drupal::state()-&gt;set('last_key', $array_key);
}

// Delete last bank if all were processed
\Drupal::state()-&gt;delete('last_key');
</code></pre>

<p>If the hook_cron is interrupted at least we will know in the last index executed without problems, because is stored in state variable <strong>last_key</strong></p>

<p>If we don't get any interruption we must delete the state variable.</p>

<h1>Set array pointer</h1>

<p>First I need to create a custom function named <strong>_array_set_pointer_by_key</strong> to set the array pointer to any arbitrary position, let me show the implementation.</p>

<pre><code>function _array_set_pointer_by_key(&amp;$array, $key)
{
    reset($array);
    while($index=key($array))
    {
        if($index==$key)
            break;

        next($array);
    }
}
</code></pre>

<p>The function above works with any kind of array keys.</p>

<p>Now we need to validate if we have to resume the execution of <strong>hook_cron</strong> in some position of our array of list of items, using again the <strong>Drupal::State</strong> to get the information as you can see in the following piece of code.</p>

<pre><code>$last_key = \Drupal::state()-&gt;get($last_bank_variable, null);

if ($last_key) {
  // Set pointer to last key to process
  _array_set_pointer_by_key($array, $last_key);

  // Set array to next valid bank to process
  next($array);
}
</code></pre>

<p>After reset the array we use the <a href="http://php.net/manual/en/function.next.php" target="_blank">next</a> function to move the pointer to next position where we want to resume.</p>

<p>I hope you find this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/26/how-to-use-drupal-8-state-in-cron-to-resume-a-process/</link>
                <pubDate>Fri, 26 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/26/how-to-use-drupal-8-state-in-cron-to-resume-a-process/</guid>
            </item>
                    <item>
                <title>A Drupal Guy in a Backbone Conference</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;;" src="http://enzolutions.com/assets/img/backbonejs_logo.png"/> Past Dic 15th and 16th I attend the 3rd Backbone Conference in Cambridge, Massachusetts, USA.</p>

<p>I'm a Drupal Backend Developer, so my experience in Front End is limited to small pets projects I have been working just for fun like <a href="http://github.com/enzolutions/generator-marionette-drupal" target="_blank">http://github.com/enzolutions/generator-marionette-drupal</a>.</p>

<p>To be honest Backend Developers speaking generally, we underestimate the work of Front End Developers do.</p>

<p>Even I have been playing with Backbone for last 10 months I didn't have huge expectations about this conference, but eager to get new knowledge. In general I had the idea people will present tons of plugins for instance jQuery plugins.</p>

<p>But I'm glad to say I was totally wrong, after 5 minutes of the first conference I was totally lost between patterns and architecture decision inside the framework.</p>

<p>In general I notice jQuery is a set of tools two generations behind of current implementations.</p>

<p>Also I love how open the community is, because they had conferences talking from Wordpress to competitors like <a href="https://ampersandjs.com/" target="_blank">AmpersanJS</a> and others.</p>

<p>All lectures are available in video <a href="https://www.youtube.com/playlist?list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">here</a>.</p>

<p>These are my favorites.</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=GqEzbKoKbsI&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged&index=3" target="_blank">Jasmine Testing for Backbone js Models and Views</a></li>
<li><a href="https://www.youtube.com/watch?v=Zb01eNS6-no&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged&index=5" target="_blank">Building Offline First Applications with Backbone</a></li>
<li><a href="https://www.youtube.com/watch?v=EvQnntaqVdE&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged&index=7" target="_blank">Marionette The Backbone Framework</a></li>
<li><a href="https://www.youtube.com/watch?v=k8JOKLEPSe0&index=10&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">Ampersand.js</a></li>
<li><a href="https://www.youtube.com/watch?v=C4Mqg9PJwBU&index=11&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">A Visit to the World of Responsive Real time</a></li>
<li><a href="https://www.youtube.com/watch?v=y1yftu2zdIk&index=12&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">The Backbone Tango Dancing with Geographical Data</a></li>
<li><a href="https://www.youtube.com/watch?v=dztuKgjk0Bg&index=14&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">Web Components and Backbone</a></li>
<li><a href="https://www.youtube.com/watch?v=QZYd6vz93IE&index=15&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">Backbone in XBox and Windows Apps</a></li>
<li><a href="https://www.youtube.com/watch?v=jbGm3mJXh_s&index=17&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">Backbone under the Magnifying Glass Tools for Exploring and Debugging Your Apps</a></li>
<li><a href="https://www.youtube.com/watch?v=rR438xfRp14&index=18&list=PLlgxAbM67lYIGw8DnANC7VgREbzJRQged" target="_blank">Teaching Backbone and other cool technologies</a></li>
</ul>

<p>So what is the next for me, well I will try to continue trying to learn more about Front End libraries and frameworks but now I will see with the respect they deserve.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/17/a-drupal-guy-in-a-backbone-conference/</link>
                <pubDate>Wed, 17 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/17/a-drupal-guy-in-a-backbone-conference/</guid>
            </item>
                    <item>
                <title>How to create a Rest Resource in Drupal 8</title>
                <description><![CDATA[<p>One of the biggest changes in <a href="https://www.drupal.org/drupal-8.0" target="_blank">Drupal 8</a> is his integration with <a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">RESTful</a>.</p>

<p>Today I want to share with you how to create your own Rest Resources in a custom module to publish your website information using a RESTful API.</p>

<p>I will create a new REST Resource with the objective to get the list of bundle types available for a specific entity.</p>

<h1>Create a Module</h1>

<p>I will skip the explanation about how to create a Module in Drupal 8 because could be generated using the project <a href="http://drupalconsole.com/" target="_blank">Drupal Console</a> executing the following command.</p>

<pre><code>$ php console.phar generate:module
</code></pre>

<h1>Create a new REST Resource</h1>

<p>Assuming we create a new module named <strong>entity_rest_extra</strong> is required to create a class file <strong>EntityBundlesResource.php</strong> inside the module in a folder path <strong>src/Plugin/rest/resource</strong>.</p>

<h2>Namespace</h2>

<p>The namespace for this new Rest Resource will be</p>

<pre><code>namespace Drupal\entity_rest_extra\Plugin\rest\resource;
</code></pre>

<h2>Libraries</h2>

<p>We must to use some dependencies to create the REST Resource, below the full list.</p>

<pre><code>use Drupal\Core\Entity\EntityManagerInterface;
use Drupal\rest\Plugin\ResourceBase;
use Drupal\rest\ResourceResponse;
use Drupal\Core\Session\AccountProxyInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpKernel\Exception\HttpException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Psr\Log\LoggerInterface;
</code></pre>

<h2>Annotations</h2>

<p>To enable the Discover for REST Resources found our new Rest Resource we must to implement the proper information in Annotation. check the following example.</p>

<pre><code>/**
 * Provides a resource to get bundles by entity.
 *
 * @RestResource(
 *   id = "entity_bundles",
 *   label = @Translation("Bundles by entities"),
 *   uri_paths = {
 *     "canonical" = "/bundles/{entity}"
 *   }
 * )
 */
</code></pre>

<p>As you can see we provide a Resource <strong>id</strong> with a <strong>label</strong>, also we define the <strong>canonical</strong> URL for our REST Resource with a parameter named <strong>entity</strong></p>

<p>Using the annotation the Discover for Rest Resources will declare the routing dynamically so we don't need include a <strong>routing.yml</strong> file in our module.</p>

<h2>Implement Class</h2>

<p>Now we have to create a class extending from <a href="https://api.drupal.org/api/drupal/core%21modules%21rest%21src%21Plugin%21ResourceBase.php/class/ResourceBase/8" target="_blank">ResourceBase</a> as you can see in the following snippet</p>

<pre><code>class EntityBundlesResource extends ResourceBase {
  /**
   *  A curent user instance.
   *
   * @var \Drupal\Core\Session\AccountProxyInterface
   */
  protected $currentUser;
  /**
   *  A instance of entity manager.
   *
   * @var \Drupal\Core\Entity\EntityManagerInterface
   */
  protected $entityManager;
}
</code></pre>

<p>Our implementation require two properties for <strong>Current User</strong> and <strong>EntityManager</strong>.</p>

<h1>Class Setup</h1>

<p>As you can imagine each class require a constructor and Drupal 8 is not the exception, but Drupal also implement
<a href="http://www.phptherightway.com/pages/Design-Patterns.html" target="_blank">The Factory Pattern</a> to prepare the values to send to constructor.</p>

<p>But is better to explain to you with the following example where we need to send the <a href="https://www.drupal.org/node/2133171" target="_blank">services</a>: <strong>Resource Format</strong>, <strong>Logger</strong>, <strong>Entity manager</strong> and <strong>Current User</strong> to the <strong>constructor</strong></p>

<pre><code>/**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
    return new static(
      $configuration,
      $plugin_id,
      $plugin_definition,
      $container-&gt;getParameter('serializer.formats'),
      $container-&gt;get('logger.factory')-&gt;get('rest'),
      $container-&gt;get('entity.manager'),
      $container-&gt;get('current_user')
    );
  }
</code></pre>

<p>Now we need to define the constructor where we are receiving the values from the create method, as you can see below.</p>

<pre><code>/**
  * Constructs a Drupal\rest\Plugin\ResourceBase object.
  *
  * @param array $configuration
  *   A configuration array containing information about the plugin instance.
  * @param string $plugin_id
  *   The plugin_id for the plugin instance.
  * @param mixed $plugin_definition
  *   The plugin implementation definition.
  * @param array $serializer_formats
  *   The available serialization formats.
  * @param \Psr\Log\LoggerInterface $logger
  *   A logger instance.
  */
  public function __construct(
    array $configuration,
    $plugin_id,
    $plugin_definition,
    array $serializer_formats,
    LoggerInterface $logger,
    EntityManagerInterface $entity_manager,
    AccountProxyInterface $current_user) {
    parent::__construct($configuration, $plugin_id, $plugin_definition, $serializer_formats, $logger);

    $this-&gt;entityManager = $entity_manager;
    $this-&gt;currentUser = $current_user;
  }
</code></pre>

<h1>Implement REST method</h1>

<p>Last but not least we have to define the RESTful state we want to implement, in my example I want to implement a GET method to response according the parameters.</p>

<p>Inside the class with have to create a method matching the RESTful state name, so for GET we have to implement a method named <strong>get</strong> as you can see in the following snippet.</p>

<pre><code>  /*
   * Responds to GET requests.
   *
   * Returns a list of bundles for specified entity.
   *
   * @return \Drupal\rest\ResourceResponse
   *   The response containing a list of bundle names.
   *
   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
   */
  public function get($entity = NULL) {
    if ($entity) {
      $permission = 'Administer content types';
      if(!$this-&gt;currentUser-&gt;hasPermission($permission)) {
        throw new AccessDeniedHttpException();
      }
      $bundles_entities = \Drupal::entityManager()-&gt;getStorage($entity .'_type')-&gt;loadMultiple();
      $bundles = array();
      foreach ($bundles_entities as $entity) {
        $bundles[$entity-&gt;id()] = $entity-&gt;label();
      }
      if (!empty($bundles)) {
        return new ResourceResponse($bundles);
      }
      throw new NotFoundHttpException(t('Bundles for entity @entity were not found', array('@entity' =&gt; $entity)));
    }

    throw new HttpException(t('Entity wasn\'t provided'));
  }
</code></pre>

<p>As you can see the method receive as parameter the last value pass to URL.</p>

<p>Also using the <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Session%21AccountProxyInterface.php/interface/AccountProxyInterface/8" target="_blank">Account Proxy Interface</a> we can determine if Current User has enough rights to get the bundle list.</p>

<p>The <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Entity%21EntityManagerInterface.php/interface/EntityManagerInterface/8" target="_blank">Entity Manager Interface</a> allow us to we get the list of bundles for Entity requested.</p>

<p>After that we prepare an array with the results, these results will be transformed to the proper format requested by the user using the class <a href="https://api.drupal.org/api/drupal/core%21modules%21rest%21src%21ResourceResponse.php/class/ResourceResponse/8" target="_blank">ResourceResponse</a>, in our case we will request a json response.</p>

<p>If you want to implement RESTful state POST just add a method <strong>post</strong></p>

<p>You can see a full and functional custom REST Resources at <a href="https://github.com/enzolutions/entity_rest_extra" target="_blank">https://github.com/enzolutions/entity_rest_extra</a></p>

<h1>Using our new Resource</h1>

<p>Using the contrib module <a href="https://www.drupal.org/project/restui/git-instructions" target="_blank">Rest UI</a> (I recommend to use the git version until Drupal 8 get a first release) you can enable your custom Rest Resource.</p>

<p>This module enable a UI to set the Authentication and format for each RESTful method implemented as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/restui_bundle_entities_settings.png"/></p>

<p>Using this setting the access to Resource will be granted or denied.</p>

<p>Using the Chrome Application <a href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm">Postman - REST Client</a> you can execute an authenticated request to URL <strong>http://example.com/bundles/node</strong> as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/postman_rest_request.png"/></p>

<p>If all is working as expected you will get a similar result to next json output.</p>

<pre><code>{
  "article": "Article",
  "page": "Basic page"
}
</code></pre>

<p>I hope you find this blog entry usefull.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/16/how-to-create-a-rest-resource-in-drupal-8/</link>
                <pubDate>Tue, 16 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/16/how-to-create-a-rest-resource-in-drupal-8/</guid>
            </item>
                    <item>
                <title>How to create a Field Formatter in Drupal 8</title>
                <description><![CDATA[<p>One of the biggest changes in <a href="https://www.drupal.org/drupal-8.0" target="_blank">Drupal 8</a> is his integration with <a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">RESTful</a>.</p>

<p>Because now Views lives in Core you can create a view with JSON response in few minutes, you just need enable modules <strong>Views</strong>, <strong>Views UI</strong> and <strong>RESTful Web Services</strong></p>

<p>The problem I found with image is the formatter for image is not compatible with RESTful responses due the output of Image formatter is HTML.</p>

<h1>Create a View</h1>

<p>Let me explain the situation if you create a view with a <strong>Rest Export</strong> display you can select what fields of your entity you want to render.</p>

<p>Now if you choose an image field the default format is Image as you can see in the following snapshot.</p>

<p><img src="http://enzolutions.com/assets/img/image_field_formatter.png"/></p>

<p>Even if you don't set the option to link to original image you will get the image in HTML format as you see in the following sample of JSON response.</p>

<pre><code>[
  {
    title: "Image sample # 3",
    field_image: " &lt;img src="http://example.com/sites/default/files/styles/thumbnail/public/field/image/globe.jpg?itok=wmu3VCr6" width="100" height="75" alt="" typeof="foaf:Image" class="image-style-thumbnail" /&gt; "
  },
  {
    title: "Image sample # 2",
    field_image: " &lt;img src="http://example.com/sites/default/files/styles/thumbnail/public/field/image/sample_08.jpg?itok=X9N005N1" width="100" height="75" alt="" typeof="foaf:Image" class="image-style-thumbnail" /&gt; "
  },
  {
    title: "Image sample # 1",
    field_image: " &lt;img src="http://d$/sites/default/files/styles/thumbnail/public/field/image/sample_01.jpg?itok=UD1-QXTj" width="100" height="75" alt="" typeof="foaf:Image" class="image-style-thumbnail" /&gt; "
  }
]
</code></pre>

<p>The previous output was generated by a view selecting articles with images, if you want import this view in your system just download the file <a href="http://enzolutions.com/assets/attaches/view_image_list.yml" target="_blank">views_list.yml</a> and import using the Configuration Management of Drupal accessing the URL <strong>http://example.com/admin/config/development/configuration/single/import</strong> in your Drupal install as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/configuration_management_view_import.png"/></p>

<p>If you want read more about Configuration Management in Drupal 8 you can read the post entry <a href="{site.url}}/articles/2014/08/27/understanding-configuration-management-in-drupal-8/">Understanding Configuration Management in Drupal 8</a></p>

<p>To resolve this problem I will show you how to create your own Field Formatter to meet your needs.</p>

<h1>Create a Module</h1>

<p>I will skip the explanation about how to create a Module in Drupal 8 because could be generated using the project <a href="http://drupalconsole.com/" target="_blank">Drupal Console</a> executing the following command.</p>

<pre><code>$ php console.phar generate:module
</code></pre>

<h1>Create a new Field Formatter</h1>

<p>If you want to create a new custom Field Formatter is require to add a new class file located inside your module in the following path</p>

<pre><code>YOUR_MODULE/src/Plugin/Field/FieldFormatter/
</code></pre>

<p>Inside this folder you must create a class file per each Field Formatter do you want to create.</p>

<p>I will create a new file named <strong>ImageRawFormatter.php</strong>, I will explain each part of this file</p>

<h2>Field Formatter Metadata</h2>

<p>Before to start to code we must to define some stuff required for a proper function.</p>

<h3>Namespace</h3>

<p>We have to define what will be Namespace for your Field Formatter</p>

<pre><code>namespace Drupal\image_raw_formatter\Plugin\Field\FieldFormatter;
</code></pre>

<p>Drupal 8 implement <a href="http://www.php-fig.org/psr/psr-4/" target="_blank">PSR-4</a> from  <a href="http://www.php-fig.org/" target="_blank">PHP Framework Interop Group</a></p>

<p>This specification follow the following pattern</p>

<pre><code>\&lt;NamespaceName&gt;(\&lt;SubNamespaceNames&gt;)*\&lt;ClassName&gt;
</code></pre>

<p>In our case the division will be</p>

<ul>
<li><strong>NamespaceName</strong>: Drupal</li>
<li><strong>SubNamespaceNames</strong>: image_raw_formatter\Plugin\Field\FieldFormatter</li>
<li><strong>ClassName</strong>: ImageRawFormatter</li>
</ul>

<h2>Libraries required</h2>

<p>In this specific case we have to define where are classes we require to create our Field Formatter.</p>

<p>Drupal 8 use Autoloader class but we need to inform where they are using the intruction <strong>use</strong>.</p>

<pre><code>use Drupal\image\Plugin\Field\FieldFormatter\ImageFormatterBase;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Field\FieldItemListInterface;
use \InvalidArgumentException;
</code></pre>

<h3>Annotations</h3>

<p>Drupal 8 have several discovers to detect specific implementation, for instance we have a Discover to detect all Field Formatter declared in our application and the way to declare a new Field Formatter is using <a href="https://wiki.php.net/rfc/annotations" target="_blank">Annotations</a>.</p>

<p>Below you can find an annotation example for Field Formatter</p>

<pre><code>/**
 * Plugin implementation of the 'image_raw_formatter' formatter.
 *
 * @FieldFormatter(
 *   id = "image_raw_formatter",
 *   label = @Translation("Image Raw"),
 *   field_types = {
 *     "image"
 *   }
 * )
 */
</code></pre>

<p>As you can see we must define an unique <strong>id</strong> with a <strong>label</strong> with translation and we must define for which field types this Field Formatter will be available.</p>

<h2>Implement Class</h2>

<p>Now we have to create a class extending from <a href="https://api.drupal.org/api/drupal/core%21modules%21image%21src%21Plugin%21Field%21FieldFormatter%21ImageFormatterBase.php/class/ImageFormatterBase/8">ImageFormatterBase</a> as you can see in the following snippet</p>

<pre><code>class ImageRawFormatter extends ImageFormatterBase
{
}
</code></pre>

<h3>Settings Form</h3>

<p>Now we have to add a method <strong>settingsForm</strong> to define the Setting options for our Formatter. check the following implementation.</p>

<pre><code>/**
   * {@inheritdoc}
   */
  public function settingsForm(array $form, FormStateInterface $form_state) {
    $image_styles = image_style_options(FALSE);
    $element['image_style'] = array(
      '#title' =&gt; t('Image style'),
      '#type' =&gt; 'select',
      '#default_value' =&gt; $this-&gt;getSetting('image_style'),
      '#empty_option' =&gt; t('None (original image)'),
      '#options' =&gt; $image_styles,
    );
    return $element;
  }
</code></pre>

<p>The implementation above allow user select a specific image style to be returned or just return the original image.</p>

<h3>Summary Report</h3>

<p>Is important to inform to end users current setting of formatter, to enable that we have to implement the method <strong>settingsSummary</strong></p>

<pre><code>/**
   * {@inheritdoc}
   */
  public function settingsSummary() {
    $summary = array();
    $image_styles = image_style_options(FALSE);
    // Unset possible 'No defined styles' option.
    unset($image_styles['']);
    // Styles could be lost because of enabled/disabled modules that defines
    // their styles in code.
    $image_style_setting = $this-&gt;getSetting('image_style');
    if (isset($image_styles[$image_style_setting])) {
      $summary[] = t('Image style: @style', array('@style' =&gt; $image_styles[$image_style_setting]));
    }
    else {
      $summary[] = t('Original image');
    }
    return $summary;
  }
</code></pre>

<p>As you can see the method above just read the current settings and render an output.</p>

<h3>Render Field Formatter</h3>

<p>At the end we need to define the how we want to render the field based in current Field Formatter settings, we have to implement the method <strong>viewElements</strong> as you can see in the following snippet.</p>

<pre><code>/**
   * {@inheritdoc}
   */
  public function viewElements(FieldItemListInterface $items) {
    $elements = array();
    $image_style_setting = $this-&gt;getSetting('image_style');

    // Determine if Image style is required.
    $image_style = NULL;
    if (!empty($image_style_setting)) {
      $image_style = entity_load('image_style', $image_style_setting);
    }
    foreach ($items as $delta =&gt; $item) {
      if ($item-&gt;entity) {
        $image_uri = $item-&gt;entity-&gt;getFileUri();
        // Get image style URL
        if ($image_style) {
          $image_uri = ImageStyle::load($image_style-&gt;getName())-&gt;buildUrl($image_uri);
        } else {
          // Get absolute path for original image
          $image_uri = $item-&gt;entity-&gt;url();
        }
        $elements[$delta] = array(
          '#markup' =&gt; $image_uri,
        );
      }
    }
    return $elements;
  }
</code></pre>

<p>If you read the logic only determine if the configuration require use any image style or if is only required the original image, in both sceneries the proper path url is return.</p>

<p>We don't need any transformation to JSON because that is handled by view Display selected.</p>

<h1>Module usage</h1>

<p>After enable our custom module we just need edit our view and edit the field to use new Raw Formatter as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/image_field_raw_formatter.png"/></p>

<p>After save the view and run again the output will be totally different and perfect to use in RESTful services to avoid HTML parsing to extract the image path. check the output example below.</p>

<pre><code>[
  {
    title: "Image sample # 3",
    field_image: "http://drupal8b3.dev/sites/default/files/styles/thumbnail/public/field/image/globe.jpg?itok=wmu3VCr6"
  },
  {
    title: "Image sample # 2",
    field_image: "http://drupal8b3.dev/sites/default/files/styles/thumbnail/public/field/image/sample_08.jpg?itok=X9N005N1"
  },
  {
    title: "Image sample # 1",
    field_image: "http://drupal8b3.dev/sites/default/files/styles/thumbnail/public/field/image/sample_01.jpg?itok=UD1-QXTj"
  }
]
</code></pre>

<p>You can download a full implementation of this custom Image Raw Field Formatter at <a href="https://github.com/enzolutions/image_raw_formatter" target="_blank">https://github.com/enzolutions/image_raw_formatter</a>.</p>

<p>I expect you found this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/09/how-to-create-a-field-formatter-in-drupal-8/</link>
                <pubDate>Tue, 09 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/09/how-to-create-a-field-formatter-in-drupal-8/</guid>
            </item>
                    <item>
                <title>Resetting the administrator password with sql-query in Drupal 8</title>
                <description><![CDATA[<h1>The Problem</h1>

<p>When in Drupal 8, the password for user #1 (the administrator) is lost and the email notification don't work, it is possible to set the password via a database query.</p>

<p>Right now we are in the middle of the development of Drupal 8 and the usual command <a href="http://www.drushcommands.com/drush-6x/user/user-login" target="_blank"><strong>drush uli</strong></a> provided by <a href="http://www.drush.org/" target="_blank"></a>Drush doesn't work.</p>

<p>Right now when I try to execute that command I got the following error.</p>

<pre><code>Fatal error: Call to undefined function url() in /Users/enzo/.composer/vendor/drush/drush/commands/user/user.drush.inc on line 466
Drush command terminated abnormally due to an unrecoverable error.
</code></pre>

<h1>The Solution</h1>

<h2>Generate a new password</h2>

<p>First, you have to generate a password hash that is valid for your site.</p>

<p>Execute the following commands from the command line, in the Drupal 8 root directory:</p>

<pre><code>$ php core/scripts/password-hash.sh 'your-new-pass-here'

password: your-new-pass-here    hash: $S$EV4QAYSIc9XNZD9GMNDwMpMJXPJzz1J2dkSH6KIGiAVXvREBy.9E
</code></pre>

<p>Be careful not to include more or less characters as the hash. These hashes look somewhat like <strong>$S$EV4QAYSIc9XNZD9GMNDwMpMJXPJzz1J2dkSH6KIGiAVXvREBy.9E</strong>.</p>

<p>We will use the generated password later.</p>

<h2>Update the user password.</h2>

<p>Now you need to update the user password, in our case we need update the Administrator password, fortunately the UID for Administrator is 1 equal to previous versions of Drupal.</p>

<p>With the new password we need run the following SQL statement.</p>

<pre><code>UPDATE users_field_data SET pass='$S$E5j59pCS9kjQ8P/M1aUCKuF4UUIp.dXjrHyvnE4PerAVJ93bIu4U' WHERE uid = 1;
</code></pre>

<h2>Dealing with Cache</h2>

<p>At this point if you try to login in the Drupal 8 website you will rejected, it's because the login system don't read directly the table <strong>users_field_data</strong> instead of a cache for entities is used.</p>

<p>To flush the cache for a specific user entity with compromise the rest of cache of your system you can use the following SQL statement.</p>

<pre><code>DELETE FROM cache_entity WHERE cid = 'values:user:1';
</code></pre>

<p>Now you can grab a cup of coffee/tea and enjoy your Drupal 8 website.</p>

<p>I hope you found this article useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/12/07/resetting-the-administrator-password-with-sql-query-in-drupal-8/</link>
                <pubDate>Sun, 07 Dec 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/12/07/resetting-the-administrator-password-with-sql-query-in-drupal-8/</guid>
            </item>
                    <item>
                <title>How to work with Drupal 8 forms with Ajax.</title>
                <description><![CDATA[<p>Nowadays Drupal 8 has couple of beta releases so the official release is around the corner. For that reason I start to test the typical features required in a Drupal 7 site.</p>

<p>Today I will share with you my experiences with Form with Ajax effects.</p>

<h1>Create a Form</h1>

<p>I will skip the explanation about how to create a Form in Drupal 8 because could be generated using the project <a href="http://drupalconsole.com/" target="_blank">Drupal Console</a> executing the following command.</p>

<pre><code>$ php console.phar generate:form:config
</code></pre>

<h1>Drupal 8 FAPI + Ajax</h1>

<p>The current documentation of FAPI for Drupal 8 about <a href="https://api.drupal.org/api/drupal/developer!topics!forms_api_reference.html/8#ajax" target="_blank">ajax</a> is not updated.</p>

<p>But the property is still name <strong>#ajax</strong> check the following implementation.</p>

<pre><code>   $form['source']['version'] = array(
      '#type' =&gt; 'radios',
      '#title' =&gt; $this-&gt;t('Drupal Version'),
      '#default_value'=&gt;"d6",
      '#options' =&gt; $options,
      '#description' =&gt; t('Choise what version of Drupal you want migrate'),
      '#required' =&gt; TRUE,
      '#ajax' =&gt; array(
        'callback' =&gt; '::updateDestinationIds',
        'wrapper' =&gt; 'edit-destinations',
        'progress' =&gt; array(
          'type' =&gt; 'throbber',
          'message' =&gt; "searching",
        ),
      ),
    );
</code></pre>

<p>If you are a old developer of Drupal you will recognize the properties <strong>wrapper</strong>, <strong>progress</strong>, these properties work equal in Drupal 7.</p>

<p>The main change is in callback property, in my example the value '::updateDestinationIds' means the method <em>updateDestinationIds</em> is part of the Form class. I didn't test but looks like we can assign a static method like 'Drupal::StaticMethod'.</p>

<h1>Response method</h1>

<p>Similar to Drupal 7 the method has to return the portion of the Form must be overwritten via ajax, let me show you an example.</p>

<pre><code>/**
 * Gets migration configurations.
 *
 * @return array
 *   An array of migration names.
 */
function updateDestinationIds($form, FormStateInterface $form_state) {
    $form ['source']['migration_ids']['#options'] = $this-&gt;getDestinationIds($form_state-&gt;getValue('version'));
    return $form ['source']['migration_ids'];
}
</code></pre>

<h1>Known Issues</h1>

<p>After implement the Ajax function I detect a problem when I try to select values populated via Ajax and submit the form I get this error message "An illegal choice has been detected. Please contact the site administrator."</p>

<p>When I debug I can determine the method <a href="https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Installer!Form!SiteSettingsForm.php/function/SiteSettingsForm%3A%3AbuildForm/8" target="_blank">buildForm</a> is executed in different moments listed below</p>

<ul>
<li><strong>Form load</strong>: To build the form</li>
<li><strong>Ajax request</strong>: To re-build the form and determine elements to overwrite.</li>
<li><strong>Form submit</strong>: To process the form</li>
</ul>

<p>My problem was in the last one <em>Form Submit</em> because the submit run the implementation of class <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Form%21FormValidator.php/8" target="_blank">FormValidator</a>.</p>

<p>The FormValidator ignore the Ajax process and validate the FormState values against the list of values allowed and because took this values from buildForm they are always the initial values ignoring the user interaction.</p>

<p>To resolve this problem I use the  <a href="https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Form%21FormState.php/class/FormState/8" target="_blank">FormState</a> object to determine if buildForm was executed to render the form at first time or if has human interaction (ajax or submit) to define the allowed list of values based in user interaction, check the following snippet.</p>

<pre><code>$form_state_complete_form=$form_state-&gt;getCompleteForm();
if(empty($form_state_complete_version)){
    $form ['source']['migration_ids']['#options'] = $this-&gt;getDestinationIds("d6");
 }
  else  {
   $form ['source']['migration_ids']['#options'] = $this-&gt;getDestinationIds($form_state_complete_version);
 }
</code></pre>

<p>Don't be worry about this behavior as you can see is easy to fix and I'm sure won't be necessary when Drupal 8 get the first official release.</p>

<h1>Caveats</h1>

<p>The current status of Drupal 8 only support the ajax update in <em>Select</em> elements, I tried with <strong>tableselect</strong> and <strong>checkboxes</strong> and doesn't work.</p>

<p>There is an issue for this problem at <a href="https://www.drupal.org/node/1458824" target="_blank">Ajax doesn't work with Tableselect with checkboxes</a>.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/11/25/how-to-work-with-drupal-8-forms-with-ajax/</link>
                <pubDate>Tue, 25 Nov 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/11/25/how-to-work-with-drupal-8-forms-with-ajax/</guid>
            </item>
                    <item>
                <title>How to validate Bower files.</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;;" src="http://enzolutions.com/assets/img/bower-logo.png"/> If we want to enable people to use our libraries via <a href="bower.io" target="_blank">Bower</a> we need to follow some simple steps.</p>

<ul>
<li>Add a bower.json files to our project.</li>
<li>Create a release matching the info in our bower file.</li>
<li>Run <em>bower register</em> command to share our project.</li>
</ul>

<h1>The Problem</h1>

<p>The problem I found is the publishing process don't validate the bower.json, so is probable after publish when people try to use your library even if the system detect the library is available they get an awful error like this</p>

<pre><code>bower backform#~0.0.1-alpha EMALFORMED Failed to read /var/folders/bh/8fr0bx9113n0plkjjkt2s5d40000gn/T/enzo/bower/backform-20375-ST4wT6/bower.json

Additional error details:
Unexpected token n
</code></pre>

<h1>The solution.</h1>

<p>Fortunately there is a NodeJS package to validate the bower.json before to publish.</p>

<p>We need to install the package with the following command.</p>

<pre><code>$ npm install bower-json
</code></pre>

<p>Execute this command inside the folder of your library or use the option <em>-g</em> to install globally is up to you.</p>

<p>Now we will use the following NodeJS scrit to validate the bower.json file, let name this script as check_bower.json</p>

<pre><code>var bowerJson = require('bower-json');

// Can also be used by simply calling bowerJson()
bowerJson.read('./bower.json', function (err, json) {
    if (err) {
        console.error('There was an error reading the file');
        console.error(err.message);
        return;
    }

    console.log('JSON: ', json);
});
</code></pre>

<p>To use this script execute the following command.</p>

<pre><code>$ node check_bower.js
</code></pre>

<p>As you can imagine you will get the same error in the first execution, so you need to work in your file until you get an output similar to this</p>

<pre><code>JSON:  { name: 'backform',
  main: [ 'src/backform.js' ],
  version: '0.0.1-alpha',
  homepage: 'https://github.com/AmiliaApp/backform',
  author: { name: 'Martin Drapeau', email: 'martindrapeau@gmail.com' },
  description: 'Backform takes a Backbone model and transforms it into an HTML form',
  keywords: [ 'backbone', 'form', 'underscore' ],
  license: 'MIT',
  ignore: [ '**/.*', 'node_modules', 'bower_components', 'test', 'tests' ],
  dependencies: { backbone: '1.0.0 - 1.1.2', underscore: '1.4.4 - 1.6.0' } }
</code></pre>

<p>You can see a bower file sample at <a href="https://github.com/enzolutions/backbone.drupal/blob/master/bower.json" target="_blank">https://github.com/enzolutions/backbone.drupal/blob/master/bower.json</a>.</p>

<p>Last but not least important use the <a href="http://bower.io/docs/creating-packages">documentation</a> about what elements must be used in a a bower.json to be valid.</p>

<h1>Readers Contribution</h1>

<p>One of my reades <a href="https://disqus.com/by/jhabdas/">Josh Habdas</a> recommend also the tool <a href="http://package-json-validator.com/">Package.json validator</a> to validate before to send.</p>

<p>I hope you found this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/10/24/how-to-validate-bower-files/</link>
                <pubDate>Fri, 24 Oct 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/10/24/how-to-validate-bower-files/</guid>
            </item>
                    <item>
                <title>Apache issues after upgrade to Mac OS X Yosemite.</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;" src="http://enzolutions.com/assets/img/mac_osx_yosemite.png"/> Last night I had the <em>brilliant</em> idea of upgrade to latest version of Mac OS X <a href="http://www.apple.com/osx/" target="_blank">Yosemite</a> and the upgrade process itself was slow as usual but without any apparent error.</p>

<p>The problems popup when I decide continue the development of <a href="https://github.com/enzolutions/generator-marionette-drupal" target="_blank">Yeoman Marionette Drupal generator</a> against Drupal 8.</p>

<p>When I try to use my regular installation of Drupal 8 I got the infamous message <em>"It Works!"</em>, so the upgrade screw my apache configuration.</p>

<p>After executing the following command I detect my system now has <a href="http://httpd.apache.org/docs/2.4/">Apache 2.4</a>.</p>

<pre><code>$ httpd -v
Server version: Apache/2.4.9 (Unix)
Server built:   Sep  9 2014 14:48:20
</code></pre>

<h1>Where is my previous configuration</h1>

<p>You can find your old configuration at <em>/etc/apache2/httpd.conf~previous</em>, but could a bad idea just restore because some directives could be wrong.</p>

<p>Instead of I start to re-enable the things I used to have enabled.</p>

<h2>Mod Rewrite</h2>

<p>Because I'm a Drupal developer this is a mandatory Apache module, to re-enabled you just need edit the file <em>/etc/apache2/httpd.conf</em> and enable the following line</p>

<pre><code>LoadModule rewrite_module libexec/apache2/mod_rewrite.so
</code></pre>

<h2>Virtual Hosts</h2>

<p>If you used to have virtual host for your different project this feature is gone, again you just need to enable the directive to load where are located your virtual host as you can see in the following snippet.</p>

<pre><code># Virtual hosts
Include /private/etc/apache2/extra/httpd-vhosts.conf
</code></pre>

<h3>Client denied by server configuration</h3>

<p>After enable your virtual hosts is probable you can't access your sites and if you check your error log you will get an error similar to following log.</p>

<pre><code>[Sun Oct 19 10:29:31.338082 2014] [authz_core:error] [pid 3008] [client 127.0.0.1:51587] AH01630: client denied by server configuration: /Users/enzo/www/drupal8/
</code></pre>

<p>After read some document I found I have to add to my <em>Directory</em> section of Virtual Host the directive <em>Require all granted</em>, after apply my Virtual Host looks like next definition.</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerAdmin enzo@enzolutions.com
    DocumentRoot "/Users/enzo/www/drupal8"

    ServerName drupal8

    #ServerAlias www.dummy-host.example.com
    &lt;Directory /Users/enzo/www/drupal8&gt;
        Require all granted
        Options Includes FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from all
    &lt;/Directory&gt;

    ErrorLog "/private/var/log/apache2/drupal8-error.log"
    CustomLog "/private/var/log/apache2/drupal8-access.log" common
&lt;/VirtualHost&gt;
</code></pre>

<p>After this changes is probable your PHP version require some tweaks, in this case I recommend read the blog entry "<a href="http://enzolutions.com/articles/2014/10/17/manage-php-versions-with-phpbrew">Manage PHP versions with Phpbrew</a>".</p>

<p>I hope you find this article useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/10/19/apache-issues-after-upgrade-to-mac-os-x-yosemite/</link>
                <pubDate>Sun, 19 Oct 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/10/19/apache-issues-after-upgrade-to-mac-os-x-yosemite/</guid>
            </item>
                    <item>
                <title>Manage PHP versions with Phpbrew.</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;" src="http://enzolutions.com/assets/img/phpbrew.png"/> If you are a PHP developer I'm sure you have been in a situation where you have to maintain several projects and is possible some of them require different version of PHP.</p>

<p>To resolve this situation described above nowadays the common recommendation is install a virtual machine like <a href="https://www.vagrantup.com/" target="_blank">Vagrant</a> or <a href="https://www.docker.com/" target="_blank">Docker</a> and off course works but if you are not a big fan of <em>Virtual Machines</em> like me and specially to only change the PHP version I have good news you can resolve your problems using the project <a href="http://phpbrew.github.io/phpbrew/" target="_blank">Phpbrew</a>.</p>

<p>Let me show you how to install and use.</p>

<h1>Install Phpbrew.</h1>

<h2>Dependencies.</h2>

<p>If you already have an environment to dev in PHP is probable you can skip this section.</p>

<p>The following utils are required.</p>

<ul>
<li>automake</li>
<li>autoconf</li>
<li>curl</li>
<li>pcre</li>
<li>re2c</li>
<li>mhash</li>
<li>libtool</li>
<li>icu4c</li>
<li>gettext</li>
<li>jpeg</li>
<li>libxml2</li>
<li>mcrypt</li>
<li>gmp</li>
<li>libevent</li>
</ul>

<p>If you are in Mac OS X and you use <a href="http://brew.sh/" target="_blank">brew</a> you run the following command.</p>

<pre><code>$ brew install automake autoconf curl pcre re2c mhash libtool icu4c gettext jpeg libxml2 mcrypt gmp libevent
$ brew link icu4c
</code></pre>

<h2>Download, Install and Initialize.</h2>

<p>To install you just need to execute the following commands</p>

<pre><code>$ curl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew
$ chmod +x phpbrew
$ sudo mv phpbrew /usr/bin/phpbrew
</code></pre>

<p>Now you must initialize your system executing the following command.</p>

<pre><code>$ phpbrew init
</code></pre>

<p>Then add these lines to your <em>.bashrc</em>, <em>.bash_profile</em> or <em>.zshrc</em> file</p>

<pre><code>export PHPBREW_SET_PROMPT=1
source ~/.phpbrew/bashrc
</code></pre>

<h1>Phpbrew commands</h1>

<h2>List PHP versions available to be installed</h2>

<pre><code>$ phpbrew known
5.6:  5.6.1, 5.6.0 ...
5.5:  5.5.17, 5.5.16, 5.5.15, 5.5.14, 5.5.13, 5.5.12, 5.5.11, 5.5.10 ...
5.4:  5.4.33, 5.4.32, 5.4.31, 5.4.30, 5.4.29, 5.4.28, 5.4.27, 5.4.26 ...
5.3:  5.3.29, 5.3.28, 5.3.27, 5.3.26, 5.3.25, 5.3.24, 5.3.23, 5.3.22 ...
</code></pre>

<h2>Install a PHP specific version of PHP</h2>

<pre><code>$ phpbrew install 5.5.10
</code></pre>

<p>You need wait until Phpbrew configure your system.</p>

<h2>Install a PHP with specific libraries or virtual variant.</h2>

<pre><code>$ sudo phpbrew install 5.5.10 +mysql +pdo +ctype +mhash +hash +iconv +json +iconv +gd +apxs2=/usr/sbin/apxs -- --with-gd --enable-gd-natf --with-jpeg-dir --with-png-dir

$ sudo phpbrew install 5.5.10 +default +mysql +hash +iconv +gd +apxs2=/usr/sbin/apxs -- --with-gd --enable-gd-natf --with-jpeg-dir --with-png-dir
</code></pre>

<p>If you don't know where is located the directory for your apache <a href="http://httpd.apache.org/docs/2.2/programs/apxs.html">apxs</a> you can execute the following command.</p>

<pre><code>$ whereis apxs
/usr/sbin/apxs
</code></pre>

<p>The previous install works to use with <a href="http://drupal.org" target="_blank">Drupal</a> 8 and <a href="spress.yosymfony.com" target="_blank">Spress</a>.</p>

<h2>Get a list of available libraries or variants</h2>

<pre><code>$ phpbrew variants
Variants:
  all, apxs2, bcmath, bz2, calendar, cgi, cli, ctype, curl, dba, debug, dom,
  embed, exif, fileinfo, filter, fpm, ftp, gcov, gd, gettext, hash, iconv,
  icu, imap, inifile, inline, intl, ipc, ipv6, json, kerberos, libgcc,
  maintainer, mbregex, mbstring, mcrypt, mhash, mysql, opcache, openssl,
  pcntl, pcre, pdo, pgsql, phar, phpdbg, posix, readline, session, soap,
  sockets, sqlite, static, tidy, tokenizer, wddx, xml, xml_all, xmlrpc,
  zip, zlib


Virtual variants:
  dbs: sqlite, mysql, pgsql, pdo
  mb: mbstring, mbregex
  neutral:
  default: bcmath, bz2, calendar, cli, ctype, dom, fileinfo, filter, ipc,
  json, mbregex, mbstring, mhash, mcrypt, pcntl, pcre, pdo, phar, posix,
  readline, sockets, tokenizer, xml, curl, zip


Using variants to build PHP:

  phpbrew install php-5.3.10 +default
  phpbrew install php-5.3.10 +mysql +pdo
  phpbrew install php-5.3.10 +mysql +pdo +apxs2
  phpbrew install php-5.3.10 +mysql +pdo +apxs2=/usr/bin/apxs2
</code></pre>

<h2>List php version versions available in your system</h2>

<pre><code>$ phpbrew list
Installed versions:
* php-5.5.10
</code></pre>

<h2>Change php Version</h2>

<pre><code>$ phpbrew switch php-5.5.10
</code></pre>

<h2>Disable Phpbrew</h2>

<pre><code>$ phpbrew off
phpbrew is turned off.
</code></pre>

<p>After disable Phpbrew you can execute the following command to check the current status of system</p>

<pre><code>$ phpbrew list
Installed versions:
* (system)
  php-5.5.10
</code></pre>

<p>As you can see the PHP version available if the normal PHP version your system have, off course you enable again other version using the <em>switch</em> command explained above.</p>

<h1>Enable PHPbrew version in Apache.</h1>

<p>After switch a version you must to inform to apache about the new version of PHP apache editing the apache config file <em>/etc/apache2/httpd.conf</em> or <em>/private/etc/apache2/httpd.conf</em> as you can see in the follow snippet.</p>

<pre><code>#LoadModule php5_module libexec/apache2/libphp5.so #Disabled
LoadModule hfs_apple_module libexec/apache2/mod_hfs_apple.so
LoadModule php5_module libexec/apache2/libphp5.5.10.so
</code></pre>

<p>As you can imagine a restart of Apache Server is required.</p>

<h2>Update Phpbrew</h2>

<pre><code>$ phpbrew self-update
</code></pre>

<h1>Modify your PHP info.</h1>

<p>Is so probable after enable a new version of PHP you lost your previous setup and you need to apply that tweaks and tricks in your new PHP.ini to determine where are located you just need execute the next command.</p>

<pre><code>$ phpbrew info | grep php.ini
Loaded Configuration File =&gt; ~/.phpbrew/php/php-5.5.10/etc/php.ini
</code></pre>

<p>Remove the grep portion to get the whole information.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/10/17/manage-php-versions-with-phpbrew/</link>
                <pubDate>Fri, 17 Oct 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/10/17/manage-php-versions-with-phpbrew/</guid>
            </item>
                    <item>
                <title>How to pass parameters to RequireJS modules</title>
                <description><![CDATA[<p>RequireJS is a great library for managing JavaScript dependencies and create JavaScript modules to encapsulate concepts in your application. If you are totally new with RequiteJS maybe you want to read the post entry <a target='_blank' href="http://enzolutions.com//articles/2014/06/01/what-is-and-how-it-works-requirejs/">What is and how it works RequireJS</a>.</p>

<h1>The Problem</h1>

<p>With <a target='_blank' href="http://requirejs.org/">RequireJS</a> you can encapsulate concepts to re use in other areas of your Front End application.</p>

<p>Let me show you an example of a RequireJS module.</p>

<pre><code>define([
  'backbone.marionette',
  'communicator'
],
function (Marionette, Communicator) {
    'use strict';

    var RegionManager = Marionette.Controller.extend({

      initialize: function (options) {
        console.log('Initialize a Region Manager');

        /* internal region manager */
        this._regionManager = new Marionette.RegionManager();

        /* event API */
        Communicator.reqres.setHandler('RM:addRegion', this.addRegion, this);
        Communicator.reqres.setHandler('RM:removeRegion', this.removeRegion, this);
        Communicator.reqres.setHandler('RM:getRegion', this.getRegion, this);
      },

      /* add region facade */
      addRegion: function (regionName, regionId) {
        var region = this.getRegion(regionName);

        if (region) {
          console.log('REGION ALREADY CREATED TO JUST RETURN REF');
          return region;
        }

        return this._regionManager.addRegion(regionName, regionId);
      },

      /* remove region facade */
      removeRegion: function (regionName) {
        this._regionManager.removeRegion(regionName);
      },

      /* get region facade */
      getRegion: function (regionName) {
        return this._regionManager.get(regionName);
      }
    });

    return RegionManager;
  });
</code></pre>

<p>To use this module in other module you have to load the module as you can see below</p>

<pre><code>define([
  'backbone.marionette','regionManager'],
   function (Marionette, RegionManager) {
  'use strict';

  var regionManager = new RegionManager();

});
</code></pre>

<p>The problem with previous implementación is you can't send parameter to <em>RegionManager</em> module to use in the creación of RegionManager instance.</p>

<h1>The Solution</h1>

<p>To resolve this issue we need to do an implementation of patter design <a target='_blank' href="http://en.wikipedia.org/wiki/Dependency_injection">Dependency injection</a>.</p>

<p>Now do this implementation of Dependency injection, let me change a little bit how a Module is created adding a function to object returned as you can see in the following implementation.</p>

<pre><code>define(function(){
    return {
        init: function(Router){
          Router.appRoute('', 'home');
          Router.appRoute('login', 'login');
        }
    };
});
</code></pre>

<p>As you can see in the above code the init function receive and object <em>Router</em> and we use this object to add two Routes.</p>

<p>Now let me show you how the module Routes is call from other module.</p>

<pre><code>define([
  'backbone.marionette','router','routes'],
   function (Marionette, Router, Routes) {

    // Create Router instance.
    this._router = new Router({ App: this});

    // Set routes in router using dependency injection.
    Routes.init(this._router);
});
</code></pre>

<p>Also you can use this kind of function in module to set a local variable to be used later for other internal functions.</p>

<p>I hope you found this blog entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/09/16/how-to-pass-parameters-to-requirejs-modules/</link>
                <pubDate>Tue, 16 Sep 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/09/16/how-to-pass-parameters-to-requirejs-modules/</guid>
            </item>
                    <item>
                <title>How to enable CORS requests against Drupal 8</title>
                <description><![CDATA[<h1>The Problem</h1>

<p>Nowadays I was creating a new version of my library <a target="_blank" href="https://github.com/enzolutions/backbone.drupal">https://github.com/enzolutions/backbone.drupal</a> to enable to use Drupal 8 in mode <strong>Headless Drupal</strong> using front end in a different domain or subdomain.</p>

<p>The problem I found with <a href="http://enzolutions.com/articles/2014/05/31/what-is-cross-origin-resource-sharing-cors/">CORS</a> requests is related with the way jQuery execute the first request Ajax, because before to do an execution of a GET|PUT|DELETE|POST|PATCH request an <a target="_blank" href="http://restpatterns.org/HTTP_Methods/OPTIONS">OPTIONS</a> request is executed to validate request methods accepted for backend server more information at <a href="http://api.jquery.com/jquery.ajax/">http://api.jquery.com/jquery.ajax/</a> in <strong>contentType</strong> section.</p>

<p>The current status of Rest module (part of Drupal Core) doesn't implement the OPTIONS method, so my first approach was implement that method in class <strong>Drupal\rest\Plugin\rest\resource\EntityResource</strong> using the following code</p>

<pre><code>public function options(EntityInterface $entity) {
   $response = new ResourceResponse();
   $response-&gt;setStatusCode(ResourceResponse::HTTP_OK);
   $response-&gt;headers-&gt;set('Allow', 'GET,POST,PATCH,DELETE,OPTIONS');
   return $response-&gt;send();
  }
</code></pre>

<p>After add that extra function in class <strong>EntityResource</strong> the method was available and double checked with module <a target="_blank" href="https://www.drupal.org/project/restui">RestUI</a>, but this solution wasn't enough because I can't enable OPTIONS method without authentication and jQuery trigger the OPTIONS method without CRC Token or Basic Auth method even if you provide in the original call.</p>

<h1>The Solution</h1>

<p>In order to resolve the problem I use .htaccess and Apache <a target="_blank" href="http://httpd.apache.org/docs/current/mod/mod_rewrite.html">mod_rewrite</a> to enable CORS and intercept the OPTIONS request to avoid Drupal reject the request because doesn't have the proper credentials, I did a patch for Drupal 8 and you can download the patch <a target="_blank" href="https://www.drupal.org/files/issues/core-cors-headers-1869548-26.patch">here</a>.</p>

<p>But let me explain the changes introduced in my patch.</p>

<h2>Intercept OPTIONS Request</h2>

<p>I add a Mod Rewrite Condition and Rule to avoid all OPTIONS request be processed by Drupal and rejected, instead of a <a target="_blank" href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success">HTTP 200 OK</a> code is returned in order to enable jQuery request continue with the normal workflow.</p>

<p>Check the code below.</p>

<pre><code>RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule .* / [R=200,L]
</code></pre>

<h2>Enable CORS</h2>

<p>If you search how to enable CORS using .htaccess you will find tons of similar information and this information usually works, but in our case we have a special situation the intercept process we implemented above.</p>

<p>Because the interception the normal statements to enable CORS doesn't work and apache will reject our request, to resolve this problem I found the condition <a target="_blank" href="http://httpd.apache.org/docs/2.0/mod/mod_headers.html">always</a> for Header directive.</p>

<p>Check the implementation below.</p>

<pre><code>Header always set Access-Control-Allow-Origin "*"
Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, PATCH, DELETE"
Header always set Access-Control-Allow-Headers: Authorization
</code></pre>

<p>I strongly recommend to change <strong>*</strong> for your frontend domain i.e frontend-example.com.</p>

<p>I expect you have found this entry useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/09/08/how-to-enable-cors-requests-against-drupal-8/</link>
                <pubDate>Mon, 08 Sep 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/09/08/how-to-enable-cors-requests-against-drupal-8/</guid>
            </item>
                    <item>
                <title>How to create an interactive command in Node.js</title>
                <description><![CDATA[<p>One of the first things we learn in a new programming language is how to  implement a command line is to read the parameters provided by user in execution, today I want to make my first blog related to <a target="_blank" href="http://nodejs.org/">Node.js</a> and I will show you how to make an interactive interface with Node.js.</p>

<p>For those who are unfamiliar with the concept of interactive interfaces may refer to popular <a target="_blank" href="http://es.wikipedia.org/wiki/Ncurses">NCurses</a> used in <a target="_blank" href="http://es.wikipedia.org/wiki/GNU/Linux">GNU/Linux</a> platforms.</p>

<h1>Install Inquirer plugin.</h1>

<p>Assuming you already installed Node.js we will use npm command to install the plugin inquirer to provide us an easy way to creating an interface.</p>

<pre><code>$ npm install inquirer
</code></pre>

<h1>Create interactive script</h1>

<p>With the Inquirer plugin installed, we need to create a script called interactivo.js in which we will create our script.</p>

<p>The first thing to do is load the library inquirer as shown below.</p>

<pre><code>var inquirer = require("inquirer");
</code></pre>

<p>To use Inquirer we just pass an array of objects with questions and an anonymous function that will process the responses received, let me show an example the format of implementation.</p>

<pre><code>inquirer.prompt([/* Pass your questions in here */], function( answers ) {
    // Use user feedback for... whatever!!
});
</code></pre>

<p>Now let's see the types of questions that we can build.</p>

<h2>Input</h2>

<p>Input type questions are simple questions that can have a default value and the response is stored in a variable equal to the name that is provided in the configuration, see the implementation.</p>

<pre><code>{
  type: 'input',
  name: 'nombre',
  message: 'Nombre Completo?',
  default: 'Jose Perez'
},
</code></pre>

<h2>Confirm</h2>

<p>The confirm questions are of the type Yes or NO let's see an example of its implementation.</p>

<pre><code>{ type: 'confirm',
  name: 'casado',
  message: 'Casado?',
},
</code></pre>

<h1>List</h1>

<p>The list questions allows you to select your answer from a list of predefined options, as shown below.</p>

<pre><code>{
  type: "list",
  name: "estudios",
  message: "Nivel academico?",
  choices: [
    "Primaria",
    "Secundaria",
    new inquirer.Separator(),
    "Bachillerato",
    "Licenciatura",
    "Doctorado"
   ]
},
</code></pre>

<p>This type of question allows placing a separator of options as is seen in the above list.</p>

<h1>Checkbox</h1>

<p>The checkbox questions type allows the user to check a list of options which apply in his case, as shown in the following code listing.</p>

<pre><code>{
  type: "checkbox",
  message: "Servicios Publicos",
  name: "servicios",
  choices: [
    {
      name: "Agua",
      checked: true
    },
    {
      name: "Luz"
    },
    {
      name: "Internet"
    },
    ],
}
</code></pre>

<h1>Password</h1>

<p>The password questions type as its name suggest use a mask to hide what the user is typing on the screen, let's see an example.</p>

<pre><code>{
  type: "password",
  message: "Enter your git password",
  name: "password"
}
</code></pre>

<p>Let's now look full implementation.</p>

<pre><code>var inquirer = require("inquirer");
 
var preguntas = [
    {
      type: 'input',
      name: 'nombre',
      message: 'Nombre Completo?',
      default: 'Jose Perez'
    },
    { type: 'confirm',
      name: 'casado',
      message: 'Casado?',
    },
    { when: function (response) {
        return response.casado;
      },
      type: 'input',
      name: 'hijos',
      message: 'Número de hijos?',
    },
    {
    type: "list",
    name: "estudios",
    message: "Nivel academico?",
    choices: [
      "Primaria",
      "Secundaria",
      new inquirer.Separator(),
      "Bachillerato",
      "Licenciatura",
      "Doctorado"
     ]
    },
    {
    type: "checkbox",
    message: "Servicios Publicos",
    name: "servicios",
    choices: [
      {
        name: "Agua",
        checked: true
      },
      {
        name: "Luz"
      },
      {
        name: "Internet"
      },
      ],
    }
    ];
inquirer.prompt(preguntas, function(respuestas) {
  console.log(respuestas);
});
</code></pre>

<p>As you can see what I did was create an array with objects with the definitions of the types of questions outlined above and this arrangement is passed to inquirer.prompt function and as the second parameter an anonymous function is pass to prints the user's responses.</p>

<p>Within the definition of the questions the script add a bonus which is the use of when tproperty. When is a property that allows us to validate if we show or not a question validating the previous answers as shown below.</p>

<pre><code>when: function (response) {
  return response.casado;
}
</code></pre>

<h1>Execute the script.</h1>

<p>To run the newly created script we just run the following command line.</p>

<pre><code>$ node interactivo.js
</code></pre>

<p>Depending on user responses the result will be different, but similar to the following image.</p>

<p><img src="http://enzolutions.com/assets/img/nodejs_interactive.png"/></p>

<p>I hope you have found this blog useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/09/08/how-to-create-an-interactive-command-in-node-js/</link>
                <pubDate>Mon, 08 Sep 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/09/08/how-to-create-an-interactive-command-in-node-js/</guid>
            </item>
                    <item>
                <title>Understanding Configuration Management in Drupal 8</title>
                <description><![CDATA[<p>In few months we will get the new release of Drupal the #8 (I hope) and I think it's time to start to test, learn and write about the new ways we have in Drupal 8 to do our old tricks.</p>

<p>Today I want to talk about the Drupal 8 <a target="_blank" href="http://drupal8cmi.org/">Initiative Configuration Management</a>, this initiative pretend to facilitate the process of pass Site Building stuffs from Dev environments to Production.</p>

<p>As you can imagine this feature will be a replacement of Drupal <a target="_blank" href="https://www.drupal.org/project/features">Features</a> and if you don't use or don't like Features also will be a replacement for Drupal <a target="_blank" href="https://www.drupal.org/project/bundle_copy">Bundle Copy</a></p>

<h1>Installing Drupal 8</h1>

<p>Right now there isn't an official Drupal release for Drupal 8, but if you can start to test you can get directly from git repository.</p>

<p>If you don't have plans to contribute with code to Drupal 8 you can use the following command to get just the latest version of Drupal 8 but without the whole git history reducing dramatically the download process.</p>

<pre><code>git clone -depth 1 --branch 8.0.x http://git.drupal.org/project/drupal.git [FOLDER_NAME]
</code></pre>

<p>After that you just need create a Database and point your webserver to this folder and start the installation in the same way you usually do for Drupal 7.</p>

<h1>Configuration Management Install</h1>

<p>You don't need install Configuration Management module, because is part of Drupal 8 Core and is already installed when you complete a standard Drupal 8 installation, as you can see in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/configuration_management_module_enable.png"/></p>

<p>As you can imagine, you can't disable the Configuration Management module.</p>

<h1>Export Configuration</h1>

<p>As I said at the beginning Configuration Management is a replacement for Features, so you need to work in your website doing Site Building tasks like creating or modifying content types and other tasks like creating Views(part of Drupal 8 Core).</p>

<p>Now we will call the first Drupal 8 Installation <strong>Devel#1</strong> of a new Drupal 8 project and as you can imagine we need to share our progress with the rest of team and to avoid to create a DB Dump and force the rest of the team import we will use the Configuration Management.</p>

<p>The administrator of <strong>Devel#1</strong> has to go page: example.com/admin/config/development/configuration/full/export the UI will looks similar to image below.</p>

<p><img src="http://enzolutions.com/assets/img/configuration_management_full_export.png"></p>

<p>After press the button Export you will get a zip file named <strong>config.tar.gz</strong>, after you uncompress the zip file you will get a config folder with severals files in <a target="_blank" href="http://symfony.com/doc/current/components/yaml/yaml_format.html">YAML</a> format and each one represent a isolate piece of configuration of our site. Below you can a partial list of files created by export.</p>

<pre><code>block.block.bartik_footer.yml       menu.entity.node.page.yml
block.block.bartik_help.yml       menu_link.static.overrides.yml
block.block.bartik_login.yml        menu_ui.settings.yml
block.block.bartik_powered.yml        node.settings.yml
block.block.bartik_search.yml       node.type.article.yml
block.block.bartik_tools.yml        node.type.book.yml
block.block.seven_breadcrumbs.yml     node.type.page.yml
block.block.seven_content.yml       rdf.mapping.comment.comment.yml
block.block.seven_help.yml        rdf.mapping.node.article.yml
</code></pre>

<p>Now we have the options to share all files or just one of them with the rest of the team.</p>

<h1>Importing Configuration</h1>

<p>Now we have the files required to import the configuration in other Drupal installation <strong>Devel#2</strong> but we need to prepare the destination.</p>

<p>The Drupal 8 installation process create two folders to handle the import and export process, the installer create two folders inside <DOCROOT>/sites/default/files using random names, but we can check the proper names checking our configuration at <DOCROOT>/sites/default/setting.php.</p>

<p>Let me show you an example of that configuration file:</p>

<pre><code>$settings['install_profile'] = 'standard';
$config_directories['active'] = 'sites/default/files/config_0HU-CmGmyKok3uG6Ao8Lv4WCsVZDwqitSKnQcUNPJmtrKWdgQuM4nhQNZO_T5Mcsmaz-bFcOyA/active';
$config_directories['staging'] = 'sites/default/files/config_0HU-CmGmyKok3uG6Ao8Lv4WCsVZDwqitSKnQcUNPJmtrKWdgQuM4nhQNZO_T5Mcsmaz-bFcOyA/staging';
</code></pre>

<p>As you can see now we have two concepts <strong>active</strong> and <strong>staging</strong>.</p>

<p>The <strong>active</strong> folder must contain the current site configuration, but by default is empty because the default storage for current site is Database but is possible change I will write about that in other blog entry.</p>

<p>The <strong>staging</strong> folder contain any configuration we want to import in our site, here we must copy the files we get from export process.</p>

<p>I recommend use a version system like GIT to control the staging files and change configuration to use a non hash folder name, check my recommendation below:</p>

<pre><code>$settings['install_profile'] = 'standard';
$config_directories['active'] = 'sites/default/files/config_rK_6KVDPn-s9l-ea_L0XBN1GzJlcnrZ3CssUXn1eQ7G98viRJXesYsSdsf_KjxkCRgelximKzg/active';
$config_directories['staging'] = 'sites/default/config/staging';
</code></pre>

<p>Is required your web server have permissions to read the configuration files, for instance if _www is the user running your web server you must run the following commands:</p>

<pre><code>$ sudo chown -R _www sites/default/config/staging/
$ sudo chmod -R 755 sites/default/config/staging/
</code></pre>

<p>Until here all looks OK, but If you go to the page example.com/admin/config/development/configuration you will get the following error</p>

<p><img src="http://enzolutions.com/assets/img/configuration_management_sync_error.png"/></p>

<p>We will solve this issue in next section.</p>

<h2>Force Site UUID match</h2>

<p>The Configuration Management only allow sync configuration between same site or project to avoid issues importing configuration from site a.com to b.com, to accomplish this validation Drupal 8 generate a <a target="_blank" href="https://www.drupal.org/project/uuid">UUID</a> for each site.</p>

<p>You cat get your current site UUDI executing the following command</p>

<pre><code>$ drush cget system.site
</code></pre>

<p>The command above we will have a similar output to next listing</p>

<pre><code>uuid: 236fa77c-d83e-42de-8a03-03c574c00160
name: backend.com
mail: enzo@enzolutions.com
slogan: ''
page:
  403: ''
  404: ''
  front: node
admin_compact_mode: false
weight_select_max: 100
langcode: en
</code></pre>

<p>The config import has a different UUID, you can confirm the UID with the following command</p>

<pre><code>$ cat sites/default/config/staging/system.site.yml
</code></pre>

<p>For that reason uou need to change the value of Site UUID using the following Drush command:</p>

<pre><code>$ drush cedit system.site
</code></pre>

<p>The command above enable you to use your favorite text editor to set the same UUID present in staging config files.</p>

<h2>Run Sync</h2>

<p>After change the UUID and change the permissions, if you visit again the page example.com/admin/config/development/configuration you will see all changes, deletions, renames, and additions as you can see in the following image:</p>

<p><img src="http://enzolutions.com/assets/img/configuration_management_sync.png"/></p>

<p>You can review the differences and remove some files from staging folder if you are not happy with the result and finally execute the Import All process.</p>

<p>If you are a Drush lover you still can run this process with Drush with the following command:</p>

<pre><code>$ drush config-import staging
</code></pre>

<p>After complete the import you have now site sync.</p>

<p>I hope you have found this article useful.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/08/27/understanding-configuration-management-in-drupal-8/</link>
                <pubDate>Wed, 27 Aug 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/08/27/understanding-configuration-management-in-drupal-8/</guid>
            </item>
                    <item>
                <title>Grunt: How to list available tasks</title>
                <description><![CDATA[<p>In the blog entry <a href="http://enzolutions.com/articles/2014/06/18/introduction-to-grunt/">Introduction to Grunt</a> I  explained how we could use Grunt to automate tasks, but the only way to detect the available tasks is review the Gruntfile.js file or perform the tasks, but it's not be a good idea execute tasks that do not know what they do .</p>

<p>Fortunately there is a plugin that allows  Grunt toe review tasks available, this plugin is <a href="https://github.com/ben-eb/grunt-available-tasks">grunt-available-tasks</a>. Lets see how we can implement it in our  project.</p>

<h1>Install plugin.</h1>

<p>The first thing to do is install the plugin available-tasks running assuming you have npm installed just execute the following command.</p>

<pre><code>$ npm install grunt-available-tasks --save-dev
</code></pre>

<p>The above command will add the respective dependency in your package.json file and you will get a similar entry to the following file.</p>

<pre><code>"grunt-available-tasks":"0.5.0"
</code></pre>

<h1>Add task to Grunt.</h1>

<p>Having as base the file <strong>Gruntfile.js</strong> created in previous entry "Introduction to Grunt" we will include the necessary configuration to add the task to list the available tasks as shown below.</p>

<pre><code>availabletasks: {
  tasks: {
    options: {
      filter: 'exclude',
      tasks: ['availabletasks', 'tasks']
    }
  }              
},
</code></pre>

<p>The above action registers the configuration for the plugin <strong>available-tasks</strong> indicating that we want to exclude from the list of tasks "availabletasks" and "tasks " the last one  is an alias to configure later.</p>

<h1>Load the plugin.</h1>

<p>In order to execute the comand availabletasks/tasks we have load the plugin with the following settings Gruntfile.js close the end of file as shown in the following listing</p>

<pre><code>grunt.loadNpmTasks('grunt-available-tasks');
</code></pre>

<h1>Register the task.</h1>

<p>Finally lets register the task using an alias to facilitate their implementation, for which we just add the following code at the end of the configuration file.</p>

<pre><code>grunt.registerTask('tasks', ['availabletasks']);
</code></pre>

<h1>Run the command</h1>

<p>At this point we could get the tasks available and should just run the following command.</p>

<pre><code>$ grunt tasks
</code></pre>

<p>The above command would get an output  similar to the following image.</p>

<p><img src="http://enzolutions.com/assets/img/grunt-tasks.png"/></p>

<p>The image above was executed within the project <a href="https://github.com/enzolutions/community-bookstore">Community Bookstore</a>. See the full configuration file at <a href="https://github.com/enzolutions/community-bookstore/blob/master/frontend/Gruntfile.js">https://github.com/enzolutions/community-bookstore/blob/master/frontend/Gruntfile.js</a>.</p>

<p>I hope you have been to his liking.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/08/26/grunt-how-to-list-available-tasks/</link>
                <pubDate>Tue, 26 Aug 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/08/26/grunt-how-to-list-available-tasks/</guid>
            </item>
                    <item>
                <title>How to Generate TOC in Github/BitBucket projects</title>
                <description><![CDATA[<p>Nowadays using version control systems like <a href="http://github.com/">Github</a> or <a href="https://bitbucket.org/">Bitbucket</a> for our projects is pretty popular because of their flexibility.</p>

<p>When we are starting our projects both systems recommends the creation of a README.md file to provide an introduction to our projects, but it could turn into documentation.</p>

<p>At first moment the MD extension were not familiar for us and it's normal. The MD extension stands for MarkDown which is a series of dialing rules that will generate a HTML without knowing HTML for tags like bold, subtitle and other special labels in a similar way to that done by <a href="http://wikipedia.org">http://wikipedia.org</a>.</p>

<p>If you want to know a little more about MarkDown you can check the version of Github at <a href="https://help.github.com/articles/github-flavored-markdown">https://help.github.com/articles/github-flavored-markdown</a> and BitBucket version at  <a href="https://bitbucket.org/tutorials/markdowndemo">https://bitbucket.org/tutorials/markdowndemo</a>.</p>

<p>When we have mastered the MarkDown creating sections within our document, the natural evolution is to make a table of contents to make it easier to navigate through Readme file doing our project more professional, but this task can be cumbersome luckily we will see below a tool that does this job for us.</p>

<h1>Install DocToc</h1>

<p>Assuming you have NodeJS installed in your system and therefore the npm command is available run the following command to install the DocToc project.</p>

<pre><code>$ npm install -g doctoc
</code></pre>

<h1>Generating TOC</h1>

<p>Once installed we just need to indicate on which files we are going to generate the TOC. If our project is in github only must execute the following command</p>

<pre><code>$ doctoc README.md
</code></pre>

<p>If our project is hosted in Bitbucket we just need execute the command with a slight variation as shown below.</p>

<pre><code>$ doctoc README.md --bitbucket
</code></pre>

<p>You can see a TOC generated by this command in the project <a href="https://github.com/enzolutions/community-bookstore/">https://github.com/enzolutions/community-bookstore/</a></p>

<p>I hope you have been to his liking.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/08/24/how-to-generate-toc-in-github-bitbucket-projects/</link>
                <pubDate>Sun, 24 Aug 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/08/24/how-to-generate-toc-in-github-bitbucket-projects/</guid>
            </item>
                    <item>
                <title>Mi Tribu</title>
                <description><![CDATA[<p>This is an oratory I did in Spanish for my son Axel to present to his classroom, he is coursing right now 3rd grade.</p>

<p>¿Qué es ser Tico?</p>

<p>Esta es una pregunta que puede ser fácil de responder para muchos, pero si lo piensan un poco mejor puede que no seamos 100% ticos en los que se entiende generalmente.</p>

<p>¿Quien es más tico? un indio Cabécar de la zona de Talamanca o un niño recién nacido en San Carlos?, bueno todo depende de los ojos y la tolerancia con que se mire.</p>

<p>Más del 95% de la población en Costa Rica puede rastrear sus ancestros no más allá de 500 años que fue la época de llegada de los españoles, bajo esta definición sólo los indígenas sin mezcla podrías ser denominados ticos.</p>

<p>Lo curioso es que ellos mismos no se definen como ticos sino como miembros de su tribu, lo que me hace pensar que quizás es suficiente que nosotros sepamos a qué tribu pertenecemos.</p>

<p>Yo, por ejemplo, soy un Tico algo particular, nací en Chepe para decirlo en tico, pero mis padres son colombianos, por lo que se podría decir que soy Colombiano, lo cual me conviene en términos de Fútbol pensando en James Rodríguez y demás jugadores de la Selección de Colombia que hicieron un buen papel en el mundial de Brasil.</p>

<p>Los que negativamente dicen que no soy tico, les puedo decir que en toda mi vida solo he estado 2 semanas fuera de Costa Rica y siento este país mío, como el más tico de todos.</p>

<p>Para mí el ser tico significa que lo acepte yo, y que así lo acepten los demás miembros de mi tribu que son mi familia, vecinos, compañeros de escuela y nuevas personas que se van integrando a mi vida.</p>

<p>Por eso los invito a preocuparnos más en qué podemos hacer, para que nuestro país cada día sea mejor sin importar a qué tribu pertenecemos, porque a final de cuentas todos venimos siendo turistas en este lindo país</p>

<p>Pura Vida.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/08/14/mi-tribu/</link>
                <pubDate>Thu, 14 Aug 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/08/14/mi-tribu/</guid>
            </item>
                    <item>
                <title>Introduction to Bower</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;;" src="http://enzolutions.com/assets/img/bower-logo.png"/> Continuing with the serie <em>Hot &amp; Sexy tools</em> available these days for web developers started with the entry of Blog <a target="_blank" href="http://enzolutions.com/articles/2014/06/18/introduction-to-grunt/">Introduction to Grunt</a>, now I come to speak of <a target="_blank" href="http://bower.io/">Bower</a>.</p>

<p>Bower by definition is a package manager for the web, now that simple English means a tool that allows us to define required libraries in our web applications and the bower detect the dependencies of required packages.</p>

<p>When bower check all package dependencies requested and find any inconsistency. It presents a menu to choose which version you want to use.</p>

<p>Now if you ask what kind of packages are available, ranging from packets like <a target="_blank" href="https://github.com/jquery/jquery">jQuery</a> and <a target="_blank" href="https://github.com/twbs/bootstrap">Bootstrap</a> to <a target="_blank"href="https://github.com/torvalds/linux">Linux</a>. All depends on what are our project needs, today bower has nearly fourteen thousand packages.</p>

<h2>How to install Bower.</h2>

<p>Bower is a npm package therefore <a target="_blank" href="http://npmjs.org/">NodeJS</a> is needed, with the following command we can install Bower.</p>

<pre><code>$ npm install -g bower
</code></pre>

<p>With the above command bower would be available to all system users.</p>

<h2>How to use Bower.</h2>

<p>Once Bower is installed you can use immediately in your application to download the packages you want, let's say you need jQuery in your project, well you only need to use the following command to include it.</p>

<pre><code>$ bower install jQuery
</code></pre>

<p>The above command will have the following output, which informs us that versión of jQuery was downloaded.</p>

<pre><code>bower cached        git://github.com/jquery/jquery.git#2.1.1
bower validate      2.1.1 against git://github.com/jquery/jquery.git#*
bower install       jQuery#2.1.1
</code></pre>

<p>If you're wondering where jQuery is installed in the directory where you run the command, you would have a structure similar to the following representation:</p>

<pre><code>.
└── bower_components
    └── jQuery
        ├── MIT-LICENSE.txt
        ├── bower.json
        ├── dist
        └── src
</code></pre>

<p>You see you get the minimized version of jQuery and files for normal development of jQuery is up to us to decide what files must be include in our application.</p>

<p>If you want a specific package version you must provide this information in the install process as shown in the following command:</p>

<pre><code>$ bower install &lt;package&gt;#&lt;version&gt;
</code></pre>

<h2>Group project dependencies.</h2>

<p>As we saw is quite easy to add new components, but it depends on someone memory  to install the required packages, to define all the required packages for our project we use the bower.json file.</p>

<p>Fortunately bower provides us a command that lets you create a basic bower.json file, you can see an output of interactive command <em>$ bower init</em>.</p>

<pre><code>$ bower init
[?] name: MegaProject
[?] version: 0.1.0-alpha
[?] description: Not Available
[?] main file: assets/js/main.js, assets/css/main.css
[?] what types of modules does this package expose?
[?] keywords: HTML5
[?] authors: enzo - Eduardo Garcia &lt;enzo@anexusit.com&gt;
[?] license: MIT
[?] homepage: http://enzolutions.com
[?] set currently installed components as dependencies? Yes
[?] add commonly ignored files to ignore list? Yes
[?] would you like to mark this package as private which prevents it from being [?] would you like to mark this package as private which prevents it from being accidentally published to the registry? No
</code></pre>

<p>This command above will generate a file called bower.json with the following content.</p>

<pre><code>{
  "name": "MegaProject",
  "version": "0.1.0-alpha",
  "authors": [
    "enzo - Eduardo Garcia &lt;enzo@anexusit.com&gt;"
  ],
  "description": "Not Available",
  "main": "assets/js/main.js, assets/css/main.css",
  "keywords": [
    "HTML5"
  ],
  "license": "MIT",
  "homepage": "http://enzolutions.com",
  "ignore": [
    "**/.*",
    "node_modules",
    "bower_components",
    "test",
    "tests"
  ],
  "dependencies": {
    "jQuery": "~2.1.1"
  }
}
</code></pre>

<p>Now what advantage we get from file bower.js file? The first one is portability because we just need put this file in our version control system and when a new developer arrive to team for sure we will need set up his environment; then he just need download the bower.json and run the following command:</p>

<pre><code>$ bower install
</code></pre>

<p>In this case bower detects the existence of a bower.json file and will proceed to install packages included in the file, allowing us to maintain our system clean and avoid having stored 50 versions of jQuery when in the end we are interested in last version of jQuery.</p>

<h2>Specify destination packages.</h2>

<p>As we saw before the default destination is <em>bower_components</em> folder, but it is very likely that this location is not to our liking, if we want to specify a custom destination folder we need to create a file .bowerrc to inform bower about our needs, as shown below.</p>

<pre><code>{
    "directory": "web/vendor"
}
</code></pre>

<p>Which will make the packets are stored in the folder <em>web/vendor</em> or any other you want.</p>

<p>I hope you have been to his liking.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/07/08/introduction-to-bower/</link>
                <pubDate>Tue, 08 Jul 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/07/08/introduction-to-bower/</guid>
            </item>
                    <item>
                <title>How to configure MySQL to import large database</title>
                <description><![CDATA[<p>On many occasions we need to install in our local machine production sites for development or just for faster debugging, this entails that we need to import very large databases.</p>

<p>The most common mistake is that you can not import the database, returning an error that communication with the <a target="_blank" href="http://www.mysql.com/">MySQL</a> server has been lost, as shown below.</p>

<pre><code>$ /mysql -f -uroot -proot mydb -h 127.0.0.1 &lt; ~/Downloads/prod-mysql-2013-01-29.sql
ERROR 2006 (HY000) at line 6565: MySQL server has gone away
$
</code></pre>

<p>To fix this error you must change the default configuration of MySQL, if you do not know the location of this file can use the command shown below to determine at which locations MySQL expects to find the configuration.</p>

<pre><code>$ ./mysql --help | grep my.cnf
/etc/my.cnf /etc/mysql/my.cnf /Applications/MAMP/conf/my.cnf ~/.my.cnf
$
</code></pre>

<p>In my case I have MySQL provided by <a target="_blank" href="http://www.mamp.info">MAMP</a>, so I need create a file in the location /Applications/MAMP/conf/my.cnf, based on a configuration for large databases which is available in the documentation MySQL and should be available in the path <em>/usr/share/doc/mysql-server-5.0/examples/my-large.cnf.gz</em>.</p>

<p>I will apply two changes to enable big importations.</p>

<ul>
<li>Remover Directive # skip-locking</li>
<li>Increase max_allowed_packet = 100M</li>
</ul>

<p>Then you just need restart the MySQL server and try to import the database again.</p>

<p>You can find my version of my.cnf <a target="_blank" href="http://enzolutions.com/assets/attaches/my.cnf.txt">here</a>.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/07/03/how-to-configure-mysql-to-import-large-database/</link>
                <pubDate>Thu, 03 Jul 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/07/03/how-to-configure-mysql-to-import-large-database/</guid>
            </item>
                    <item>
                <title>Introduction to Grunt</title>
                <description><![CDATA[<p><img style="float:left; margin-right: 20px;;" src="http://enzolutions.com/assets/img/grunt-logo.png"/> Today I come to speak of some of those tools that are part of the set of Hot and Sexy for all developers speak nowadays, much to our regret if another tool that apparently there is more to learn: P.</p>

<p>From my own experience I know how difficult it is to have enough time to learn all these Sexy tools, I'll try to explain it in the most practical and easiest way possible.</p>

<h2>What's Grunt.?</h2>

<p>Grunt is a tool to automate tasks is our web projects. The idea is that all of those routine tasks that we do in our projects Grunt make them for us. Among the most common tasks are:</p>

<ul>
<li>Concat files (CSS, JS, etc)</li>
<li>Minify files (CSS, JS, etc)</li>
<li>Optimize images.</li>
<li>Compilation (SASS -> CSS and others)</li>
<li>Unit Test</li>
</ul>

<p>Each of these tasks is implemented by a Grunt plugin, which today has nearly three thousand plugins, you can see the full list of plugins in <a targe="_blank" href="http://gruntjs.com/plugins">http://gruntjs.com/plugins</a>.</p>

<p>Grunt is built with is Javascript  and require <a target="_blank" href="http://nodejs.org/">NodeJS</a> to be executed which makes Grunt multi platform.</p>

<h2>How install Grunt.</h2>

<p>As I said earlier Grunt uses NodeJS to run, but you don't need to know anything about NodeJS to use Grunt, is only required to install and execute, it in the same way we you don't need to know Java to run programs that use the Java JRE.</p>

<p>The first is to install NodeJS, you can find an installer for your platform at <a target="_blank" href="http://nodejs.org/download/">http://nodejs.org/download/</a>.</p>

<p>After install NodeJS we will have NPM (Node Packaged Modules) available, NPM allows us to install packages, all packages available are listed in <a target="_blank" href="https://www.npmjs.org">https://www.npmjs.org</a>. Right now there are almost 80,000 packages and one of them is Grunt.</p>

<p>Now we have to install the package <a target="_blank" href="https://www.npmjs.org/package/grunt-cli">grunt-cli</a>, grunt-cli is a command line interface to interact with grunt. Use the following command to install it.</p>

<pre><code>npm install grunt-cli -g
</code></pre>

<p>The -g option indicates that the package will be install in overall system instead of local.</p>

<p>Now to install the <a target="_blank" href="https://www.npmjs.org/package/grunt">grunt</a> package to execute tasks we have two options.</p>

<h3>Defining package.json</h3>

<p>In our application we need to create a file named <em>package.json</em> that will read by the npm command:</p>

<pre><code>{
  "name": "example-project",
  "version": "0.1.0",
  "devDependencies": {
    "grunt": "~0.4.1"
  }
}
</code></pre>

<p>Then run the command:</p>

<pre><code>$ npm install
</code></pre>

<p>The previous command will read and process the package.json file; installing grunt and his dependencies. Generating an output similar to the following list:</p>

<pre><code>grunt@0.4.5 node_modules/grunt
├── which@1.0.5
├── dateformat@1.0.2-1.2.3
├── eventemitter2@0.4.13
├── getobject@0.1.0
├── rimraf@2.2.8
├── colors@0.6.2
├── hooker@0.2.3
├── async@0.1.22
├── grunt-legacy-util@0.2.0
├── exit@0.1.2
├── lodash@0.9.2
├── coffee-script@1.3.3
├── underscore.string@2.2.1
├── iconv-lite@0.2.11
├── nopt@1.0.10 (abbrev@1.0.5)
├── minimatch@0.2.14 (sigmund@1.0.0, lru-cache@2.5.0)
├── grunt-legacy-log@0.1.1 (underscore.string@2.3.3, lodash@2.4.1)
├── findup-sync@0.1.3 (lodash@2.4.1, glob@3.2.11)
├── glob@3.1.21 (inherits@1.0.0, graceful-fs@1.2.3)
└── js-yaml@2.0.5 (esprima@1.0.4, argparse@0.1.15)
</code></pre>

<p>Grunt and his dependencies remain within the node_modules folder and our directory tree will be similar to the following list:</p>

<pre><code>$ tree -L 3
.
├── node_modules
│   └── grunt
│       ├── CONTRIBUTING.md
│       ├── LICENSE-MIT
│       ├── README.md
│       ├── appveyor.yml
│       ├── internal-tasks
│       ├── lib
│       ├── node_modules
│       └── package.json
└── package.json
</code></pre>

<h3>Generate dependencies in package.json</h3>

<p>If you do not know which version of Grunt we need, we can request to NPM to auto generated grunt dependencies and store in package.json file. We have to create a create a generic package.json file as shown below:</p>

<pre><code>{
  "name": "example-project",
  "version": "0.1.0",
  "devDependencies": {
  }
}
</code></pre>

<p>Now run the installation of grunt informing we want auto generate dependencies as shown in the following command:</p>

<pre><code>$ npm install grunt --save-dev
</code></pre>

<p>After installing grunt and his dependencies our archive package.json will look similar to below:</p>

<pre><code>{
  "name": "example-project",
  "version": "0.1.0",
  "devDependencies": {
    "grunt": "^0.4.5"
  }
}
</code></pre>

<h2>How to create Grunt Tasks.</h2>

<p>At this point we have everything you need to start building tasks you want to use, the first thing to do is create a Gruntfile.js file to define the tasks to automate.</p>

<p>Let's check a minimum file Grunt.</p>

<pre><code>'use strict';
 
module.exports = function (grunt) {
 
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
    });
 
    // Where we tell Grunt we plan to use some plug-ins.
    //grunt.loadNpmTasks('grunt-contrib-xxxx');
 
 
    // Where we tell Grunt what to do when we type "grunt" into the terminal.
    //grunt.registerTask('default', ['xxxx']);
};
</code></pre>

<p>As seen the file has 3 sections.</p>

<ul>
<li>Initconfig: In this area we define tasks to be execute by Grunt</li>
<li>LoadNpmTask: You should make a proper load plugin for the tasks we wish to define.</li>
<li>RegisterTask: We must register the tasks to be run, they can be less than defined tasks.</li>
</ul>

<h3>Install Grunt plugin.</h3>

<p>As an example we will install the plugin <a target="_blank" href="https://github.com/gruntjs/grunt-contrib-concat">concat</a> to merge files, run the following command inside the folder of your project.</p>

<pre><code>$ npm install grunt-contrib-concat --save-dev
</code></pre>

<p>The option - save-dev  amending package.json to add the dependency in file.</p>

<h3>Plugin usage.</h3>

<p>With the plugin concat installed, now we just have to configure in Gruntfile.js file as shown below.</p>

<pre><code>'use strict';
 
module.exports = function (grunt) {
 
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),
        concat: {
            dist: {
                src: [
                    'js/libs/*.js', // All JS in the libs folder
                    '/js/global.js'  // This specific file
                ],
                dest: '/js/build/production.js',
            }
        }
    });
 
    // Where we tell Grunt we plan to use some plug-ins.
    grunt.loadNpmTasks('grunt-contrib-concat');
 
    // Where we tell Grunt what to do when we type "grunt" into the terminal.
    grunt.registerTask('default', ['concat']);
};
</code></pre>

<p>With this definition we indicate where the files are and where we want the concatenate file be stored, then we load the NPM package and finally register the task.</p>

<p>As you can see on the origin of the files to be concatenated we can use the special character * to define a large group of files.</p>

<h3>Execute task.</h3>

<p>To run the task we just use one of the following commands:</p>

<pre><code>$ grunt
 
$ grunt concat
</code></pre>

<p>The first command runs all available tasks and the second specifies the concat task, as we only have one tasks the result will be the same and we will get an output similar to the following.</p>

<pre><code>Running "concat:dist" (concat) task
File "web/js/build/production.js" created.
 
Done, without errors.
</code></pre>

<p>We can continue increasing our tasks, for instance use output of concat to add a task to minify the file.</p>

<p>All depends on what you need, the limit are  plugins available in grunt (nearly 3,000) and the needs of your project.</p>

<p>I hope you have been to his liking.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/06/18/introduction-to-grunt/</link>
                <pubDate>Wed, 18 Jun 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/06/18/introduction-to-grunt/</guid>
            </item>
                    <item>
                <title>Yeoman Generator: Marionette JS + Drupal</title>
                <description><![CDATA[<p><a href="http://yeoman.io">Yeoman</a> <a href="http://marionettejs.com">MarionetteJS</a> + <a href="drupical.org">Drupal</a> generator</p>

<p>Today I release the version 0.1.0-beta of <a href="http://enzolutions.com/projects/yeoman_generator_marionette_drupal">Yeoman Generator: Marionette + Drupal</a>.</p>

<p>If you want to create your own version of this generator, you can fork or download my version at</p>

<pre><code>$ git clone git@github.com:enzolutions/generator-marionette-drupal.git
</code></pre>

<p>This generator create a structured HTML 5 application generating modules using RequireJS, includes Grunt support to automate tasks.</p>

<p>Compass is used to generate CSS using bootstrap-sass.</p>

<p>The HTML 5 application is defined using a MVC pattern implemented with MarionetteJS and Backbone.Drupal for data model.</p>

<p>Includes scaffolding commands to create templates, models, collections, views and layouts.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/06/16/yeoman-generator-marionette-js-drupal/</link>
                <pubDate>Mon, 16 Jun 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/06/16/yeoman-generator-marionette-js-drupal/</guid>
            </item>
                    <item>
                <title>Routing & Controlling with MarionetteJS</title>
                <description><![CDATA[<p><a target="_blank" href="http://marionettejs.com/">MarionetteJS</a>  is a layer that sits on <a target="_blank" href="http://backbonejs.org">BackboneJS</a> to create scalable and professional applications.</p>

<p>Some features of MarionetteJS are :</p>

<ul>
<li>Scalable: applications are built in modules, and with event-driven architecture</li>
<li>Sensible defaults: Underscore templates are used for view rendering</li>
<li>Easily modifiable: make it work with your application's specific needs</li>
<li>Reduce boilerplate for views, with specialized view types</li>
<li>Build on a modular architecture with an Application and modules that attach to it</li>
<li>Compose your application's visuals at runtime, with the Region and Layout objects</li>
<li>Nested views and layouts within visual regions</li>
<li>Built-in memory management and zombie-killing in views, regions and layouts</li>
<li>Event-driven architecture with Backbone.Wreqr.EventAggregator</li>
<li>Flexible, "as-needed" architecture allowing you to pick and choose what you need</li>
<li>And much, much more</li>
</ul>

<p>In this example I will take the structure of libraries and dependencies explained in the blog entry <a target="_blank" href="http://enzolutions.com/articles/2014/06/01/what-is-and-how-it-works-requirejs/">What is and how it works RequireJS</a> to create a MarionetteJS application.</p>

<h1>1. Router Module.</h1>

<p>MarionetteJS  implements the object <a target="_blank" href="https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.approuter.md">Marionette.AppRouter</a> that allows you to define the paths that respond to your application. Using <a target="_blank" href="http://requirejs.org/">RequireJS</a> we can create a module that defines an object for our routes, also allows us to create multiple  Route objects that can be instantiated for other applications by convenience.</p>

<p>In our application we create a folder where modules live, named modules. See an example definition of a Route.</p>

<pre><code>define(["marionette"], function (Marionette) {
  var Router = Marionette.AppRouter.extend({
    appRoutes: {
      "": "home",
    },
    /* standard routes can be mixed with appRoutes/Controllers above */
    routes : {
      "hello/:username": "helloBuddy"
    },
    helloBuddy : function (buddy) {
      // Without controller the routing functions live in Router object
      alert("Hello " + buddy);
    }
  });
 
  return Router;
});
</code></pre>

<p>As you can see the code has an anonymus definition that returns a Router object, which then will be required for our application.</p>

<p>Then we must define the properties that are response functions of our application routes.</p>

<p><em>AppRoutes</em>: Property that allows the definition of routes with convention: URL : Method Name, the method must be defined in the Controller module that is associated with the Route within the application. This option allows the response functions change dramatically, depending on the controller being involved in Route.</p>

<p><em>routes</em>: Property that defines routes, but unlike the previous methods will be defined within the Router object. This option ensures that certain (s) routes have a specific desired behavior.</p>

<p>Both properties can be used in the same definition without problem, but the routes should not be repeated.</p>

<p>When the application starts the Router indicate which methods are executed in response to a route visited by a user.</p>

<p>In the definition of Route we use the property routes with dynamic parameters. in the  route hello:username, username is a dynamic value passed as a parameter to the method of response to the route.</p>

<h2>2. Controller Module.</h2>

<p>In the same way we did  for Routing will create a module for the controller, as shown below</p>

<pre><code>define(["marionette"], function (Marionette) {
 
    var Controller = Marionette.Controller.extend({
        initialize : function(options) {
             //TODO: code to initialize
         },
        start: function() {
            //TODO: code to start
        },
 
        /**
         * Initialized on start, without hash
         * @method
         */
         home :  function () {
            alert('Hello Marionette');
        },
    });
 
    return Controller;
});
</code></pre>

<p>This module is anonymous and extend the <a target="_blank" href="https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.controller.md">Marionette.Controller</a> object as seen have initialize and start methods to perform tasks that are required at the time of the creation of the controller.</p>

<p>Then you must define the properties that are response functions of our application routes. In our case we define the hello method.</p>

<h2>3. Invoking Controller  and Router</h2>

<p>When we declare our application we load the objects that define the Router and Controller, as shown below.</p>

<pre><code>// Loading dependences and module to execute Marionette App
require( ["marionette","../modules/AppRouter", "../modules/AppController"], function (Marionette, AppRouter, AppController) {
    // set up the app instance
    var MyApp = new Marionette.Application();
 
    // initialize the app controller
    var controller = new AppController({});
 
    // initialize the app router
    MyApp.addInitializer(function(options) {
        // initialize the router
        var router = new AppRouter({
          controller : controller
        });
    });
 
    MyApp.on("initialize:after", function(){
      // Start Backbone history a necessary step for bookmarkable URL's
      Backbone.history.start();
    });
 
    MyApp.start({});
});
</code></pre>

<p>Although Route and Controller modules were anonymous, using RequireJS we can do load modules using the relative path of the modules as shown in detail in the next line.</p>

<pre><code>require( ["marionette","../modules/AppRouter", "../modules/AppController"], function (Marionette, AppRouter, AppController) {
</code></pre>

<p>The returned objects are passed as a parameter to the anonymous function that defines the application.</p>

<p>As seen proceeds to create an instance of the Controller object, which will be later used in the definition of the Router.</p>

<pre><code>// initialize the app controller
var controller = new AppController({});
</code></pre>

<p>In the initialization of our MarionetteJS application, we create the Router using the Controller.</p>

<pre><code>// initialize the app router
MyApp.addInitializer(function(options) {
  // initialize the router
  var router = new AppRouter({
    controller : controller
  });
});
</code></pre>

<p>Finally after finishing the initialization of our application should be activated BackboneJS history of what that will activate the process of routing.</p>

<pre><code>MyApp.on("initialize:after", function(){
  // Start Backbone history a necessary step for bookmarkable URL's
  Backbone.history.start();
});
</code></pre>

<p>When it loads the application we will getan alert with the message "Hello Marionette" and if you change the URL to index.html#hello/ enzo you will get a resul similar to the following output.</p>

<p><img src="http://7sabores.com/sites/default/files/styles/large/public/marionette_routing_sample.png?itok=2lla5O-u"/></p>
]]></description>
                <link>http://enzolutions.com/articles/2014/06/02/routing-controlling-with-marionettejs/</link>
                <pubDate>Mon, 02 Jun 2014 11:11:25 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/06/02/routing-controlling-with-marionettejs/</guid>
            </item>
                    <item>
                <title>What is and how it works RequireJS</title>
                <description><![CDATA[<p><a target="_blank" href="http://requirejs.org/">RequireJS</a> is a JavaScript library that allows us to isolate the components of our JS application as modules and resolve their dependencies.</p>

<p>RequireJS implements the design pattern of software <a target="_blank" href="http://en.wikipedia.org/wiki/Asynchronous_module_definition">AMD</a> (Asynchronous Module Definition) which you could say is very similar to <a target="_blank" href="http://en.wikipedia.org/wiki/Dependency_injection">Dependency injection</a> implemented by frameworks like <a target="_blank" href="http://symfony.com/">Symfony</a>.</p>

<p>Let's check how we can use in our JS application in simple steps.</p>

<h2>1. Define entry point for RequireJS.</h2>

<p>We must download the lastest version of RequireJS library available on the website <a target="_blank" href="http://requirejs.org">http://requirejs.org</a>, after download will put in a directory called libs just for purposes of this example (tested with version 2.1.11).</p>

<p>Now we need to  define a html file and could named index.html where RequireJS is loading as shown below.</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;script data-main="libs/main" src="libs/require.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>As you can see the inclusión is done with the script tag at the end of the HTML tag body, but it could also be done within the head tag.</p>

<p>It's also possible to include RequireJS remotely using the URL <a target="_blank" href="http://requirejs.org/docs/release/2.1.11/minified/require.js">http://requirejs.org/docs/release/2.1.11/minified/require.js</a> or similar, but it is a desition of the reader.</p>

<p>As can be seen RequireJS  use the meta-data property <em>data-main</em>(, with this property we can define the entry point for RequireJS configuration, which is a relative path for the file we choose to load teh RequireJS configuraton (is necesarry exlude the js extension).</p>

<h2>2. Configure RequireJS</h2>

<p>In the file libs/main.js we define the RequireJS options. The first thing we should to define is which JS libraries will use in our application as shown below.</p>

<pre><code>require.config({
    baseUrl: 'libs',
    paths : {
      backbone : 'backbone',
      underscore : 'underscore',
      jquery : 'jquery',
      marionette : 'backbone.marionette',
      wreqr : 'backbone.wreqr',
      eventbinder : 'backbone.eventbinder',
      babysitter : 'backbone.babysitter'
  }
});
</code></pre>

<p>All files are seek in the directory defined using the <em>baseUrl</em> property, and the <em>paths</em> property allow define the location of the libraries required with a key to refer to the library later. The js extension is not required and will be added by RequireJS later.</p>

<p>As its name suggests the pattern AMD makes an asynchronous load of packages. But because not all the libraries implement the AMD pattern, is likely to a library A try to use a function defined in library B not yet loaded causing a fatal error.</p>

<p>To resolve this issue we use the property <em>Shim</em> part of  RequireJS configuration, as we see below.</p>

<pre><code>require.config({,
  shim : {
    jquery : {
      exports : 'jQuery'
    },
    underscore : {
      exports : '_'
    },
    backbone : {
      deps : ['jquery', 'underscore'],
      exports : 'Backbone'
    },
    wreqr: {
      deps : ['backbone']
    },
    eventbinder : {
      deps : ['backbone']
    },
    babysitter : {
      deps: ['backbone']
    },
    marionette : {
      deps: ['wreqr', 'eventbinder', 'babysitter'],
      exports : 'Marionette'
    }
  }
});
</code></pre>

<p>Using Shim we can define dependencies between libraries and allow to export global variables that can be used within other libraries such as jQuery library which  export  the variable jQuery.</p>

<p>The configuration with the Shim is a replacement for Order plugin used before version 2.0 of RequireJS.</p>

<p>The exports variable can also be an anonymous function to return the call noConflict function, if the library supports it.</p>

<p>Using the <em>deps</em> property, you can define multiple dependencies of libraries should be loaded before including the library that are defining, such as backbone that depends on jquery and underscore to be used.</p>

<p>Of course if we want to use the library with RequireJS  and supports AMD configuration pattern Shim isn't required.</p>

<h2>3. How to execute code required.</h2>

<p>Once defined libraries and its dependencies if necessary, we can now rewrite the code we need as shown below.</p>

<pre><code>// Loading dependences and execute Marionette App
require( ["marionette"], function (Marionette) {
    // set up the app instance
    var MyApp = new Marionette.Application();
 
    MyApp.on("initialize:after", function(){
      alert("Application has started!");
    });
 
    MyApp.start();
});
</code></pre>

<p>The above code checks that all the libraries needed to run Marionette are loaded before executing the code and get the exported global variable as a parameter.</p>

<p>In the anonymous function will create a Marionette Application and start it, As result we  will get an alert with the message "Application has started".</p>

<p>The require function has the same effect of an anonymous function, meaning that run without problems but can not be used later.</p>

<h2>4. How to create named modules.</h2>

<p>If we want encapsulate our App we must create named modules using the funcion <em>define</em>; The diference with require function is  an extra parameter that is used to name the module and returns an object or variable that will be used when the module is instantiated.</p>

<p>Then consider the previous example as a named module.</p>

<pre><code>define( 'MyApp', ["marionette"], function (Marionette) {
 
    // set up the app instance
    var MyApp = new Marionette.Application();
 
    MyApp.on("initialize:after", function(){
      alert("Application has started!");
    });
 
    // export the app from this module
    return MyApp;
});
 
// Fetch and execute Marionette App
require( ["MyApp"], function (MyApp) {
    // Execute App
    MyApp.start();
});
</code></pre>

<p>As you see we register a named module <em>MyApp</em> and  returns an object defined in Marionette.</p>

<p>Then with a <em>require</em> function the module is loaded, it receives as parameters the object returns by the module and can thus start our application.</p>

<p>It might seem a waste of time doing it this way as it is in the same file, but the idea is to create a module for file and using the configuration of RequireJS load all the libraries that define modules and then use these modules in our application.</p>

<p>You can download the <a target="_blank" href="http://enzolutions.com/projects/marionettejs_skeleton_app">Marionette App Skeleton</a> repository which implements the concepts discussed here.</p>

<p>I hope you have been to his liking.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/06/01/what-is-and-how-it-works-requirejs/</link>
                <pubDate>Sun, 01 Jun 2014 11:11:24 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/06/01/what-is-and-how-it-works-requirejs/</guid>
            </item>
                    <item>
                <title>What is Cross-Origin Resource Sharing (CORS)</title>
                <description><![CDATA[<p>Nowdays is pretty common to transfer data between web applications via Web Services to  clients that require information on different interfaces such as REST, XMLRPC, JSON, JSON-RPC, SOAP and others.</p>

<p>Almost all sites today are built using JavaScript, generating AJAX calls with XMLHttpRequest mechanism to get information  from external sites. To enable this kind of comunication is necessary implement "cross-domain" requests would otherwise be forbidden by web browsers, per the <a target="_blank" href="http://en.wikipedia.org/wiki/Same_origin_policy">same origin security policy</a>.</p>

<p>Lets imagine the following scenery: we have a frontend application using the domain http://a.com and this application wants to use data provided by a  backend site located in domain http://b.com. For security this type of communication is blocked and the end user will be only able to get the information from http://a.com, this scenario is exemplified in the following image.</p>

<p><img src="http://enzolutions.com/assets/img/crossdomain.png"/></p>

<p>To enable this kind of communication is requiered that your backed server (http//b.com) returns the specific HTTP Headers to enable CORS comunication. Below you can see an example of HTTP Header required.</p>

<pre><code>Access-Control-Allow-Credentials:true
Access-Control-Allow-Headers:X-CSRF-Token
Access-Control-Allow-Methods:POST,ADD,GET,PUT,DELETE,OPTIONS
Access-Control-Allow-Origin:http://localhost:8080
</code></pre>

<p>The header <em>Access-Control-Allow-Credentials</em> is only used if your request require some kind of authentication. You can read more information about all HTTP Headers at <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">Access Controls - CORS</a>.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/05/31/what-is-cross-origin-resource-sharing-cors/</link>
                <pubDate>Sat, 31 May 2014 11:11:24 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/05/31/what-is-cross-origin-resource-sharing-cors/</guid>
            </item>
                    <item>
                <title>How to configure MySQL to import large database</title>
                <description><![CDATA[<p>On many occasions we need to install in our local enviroment a copy of production sites for development or debugging process, this entails that need to import large databases.</p>

<p>The most common error is that you cannot import the database because for some reason you loose the communication with the <a target="_blank" href="http://www.mysql.com/">MySQL</a> server, as shown below.</p>

<pre><code>$ /mysql -f -uroot -proot mydb -h 127.0.0.1 &lt; ~/Downloads/prod-mysql-2013-01-29.sql
ERROR 2006 (HY000) at line 6565: MySQL server has gone away
</code></pre>

<p>To fix this error you must to change the default configuration of MySQL.</p>

<p>MySQL store his configuration in a file commonly named my.cnf and could be located in different locations depending the OS version you have installed.</p>

<p>If you do not know the location of this file, you can use the following command shown below to determine where you expect to find locations MySQL settings.</p>

<pre><code>$ ./mysql --help | grep my.cnf
/etc/my.cnf /etc/mysql/my.cnf /Applications/MAMP/conf/my.cnf ~/.my.cnf
</code></pre>

<p>In my case I had MySQL as part of <a target="_blank" href="http://www.mamp.info/">MAMP</a> and this file is not created by default. For this reason I will create a new file located at <em>/Applications/MAMP/conf/my.cnf</em> becuase is one of the location where MySQL will look his configuration file.</p>

<p>I recommend to use the sample provided by MySQL documentation for large databases localed at <em>/usr/share/doc/mysql-server-5.0/examples/my-large.cnf.gz.</em></p>

<p>After copy the suggested configuration from documantion, I have to apply two changes to warranty the import process don't fail.</p>

<ul>
<li><p>Remove Directive # <em>skip-locking</em></p></li>
<li><p>Increase setting <em>max_allowed_packet = 100M</em></p></li>
</ul>

<p>Then just be enough restart the MySQL server and try to import the database again.</p>

<p>You can check my version of my.cnf <a target="_blank" href="http://7sabores.com/sites/default/files/my.cnf_.txt">here</a></p>
]]></description>
                <link>http://enzolutions.com/articles/2014/05/28/how-to-configure-mysql-to-import-large-database/</link>
                <pubDate>Wed, 28 May 2014 11:11:24 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/05/28/how-to-configure-mysql-to-import-large-database/</guid>
            </item>
                    <item>
                <title>My blog is alive again!</title>
                <description><![CDATA[<p>Hello folks.</p>

<p>After many years without touch my personal website, I took the decision to put it back online.</p>

<p>Recently I have been writing technical documentation in Spanish in the website <a href="http://7sabores.com" target="_blank">7Sabores.com</a>. If you are wondering Why in Spanish? and if you read Spanish you can find my justification in the blog entry <a href='http://7sabores.com/blog/se-busca-en-espanol'>¿Se busca en Español?</a>.</p>

<p>I will not translate all my Spanish entries to English or viceversa, all depends my mood :P.</p>

<p>Also I have to say THANKS YOU to two great products <a targe="_blank" href="https://pages.github.com/">GitHub Pages</a> and <a href="http://spress.yosymfony.com/">[S]press</a>. Without them this blog couldn't be possible.</p>

<p>See you around.</p>
]]></description>
                <link>http://enzolutions.com/articles/2014/05/21/my-blog-is-alive-again/</link>
                <pubDate>Wed, 21 May 2014 11:11:24 -0600</pubDate>
                <guid>http://enzolutions.com/articles/2014/05/21/my-blog-is-alive-again/</guid>
            </item>
            </channel>
</rss>
